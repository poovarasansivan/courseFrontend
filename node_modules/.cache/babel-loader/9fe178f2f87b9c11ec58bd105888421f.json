{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\windmill-dashboard-react\\\\src\\\\pages\\\\Modals.js\";\nimport React, { useState } from 'react';\nimport PageTitle from '../components/Typography/PageTitle';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui';\n\nfunction Modals() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Open modal\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    onClose: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Modal header\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nostrum et eligendi repudiandae voluptatem tempore!\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Accept\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Accept\")))));\n}\n\nexport default Modals;","map":{"version":3,"sources":["D:/fullstack2025/windmill-dashboard-react/src/pages/Modals.js"],"names":["React","useState","PageTitle","Modal","ModalHeader","ModalBody","ModalFooter","Button","Modals","isModalOpen","setIsModalOpen","openModal","closeModal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,EAAqDC,MAArD,QAAmE,oBAAnE;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AAEA,WAASU,SAAT,GAAqB;AACnBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAED,WAASE,UAAT,GAAsB;AACpBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAED,sBACE,uDAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,eAOE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,WAAf;AAA4B,IAAA,OAAO,EAAEG,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAFF,eAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,eAWE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,eAcE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,MAAM,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEA,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAdF,eAmBE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CANF,CAPF,CADF;AA0CD;;AAED,eAAeJ,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PageTitle from '../components/Typography/PageTitle'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui'\r\n\r\nfunction Modals() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true)\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div>\r\n        <Button onClick={openModal}>Open modal</Button>\r\n      </div>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <ModalHeader>Modal header</ModalHeader>\r\n        <ModalBody>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nostrum et eligendi repudiandae\r\n          voluptatem tempore!\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\r\n           * that if present, would duplicate the buttons in a way similar to this.\r\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\r\n           * to Button\r\n           */}\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\">\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n"]},"metadata":{},"sourceType":"module"}