{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\courseForms.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { label, Select, Button } from \"@windmill/react-ui\";\n\nfunction Forms() {\n  const [selectedCourse1, setSelectedCourse1] = useState(\"\");\n  const [selectedCourse2, setSelectedCourse2] = useState(\"\");\n  const [openElective, setOpenElective] = useState(\"\");\n  const [addonCourse, setAddonCourse] = useState(\"\");\n  const [electiveCourseOptions, setElectiveCourseOptions] = useState([]);\n  const [openElectiveCourseOptions, setOpenElectiveCourseOptions] = useState([]);\n  const [addonCourseOptions, setAddonCourseOptions] = useState([]);\n  const semester = sessionStorage.getItem(\"semester\");\n  const encodedDepartment = encodeURIComponent(sessionStorage.getItem(\"department\"));\n  useEffect(() => {\n    if (semester && encodedDepartment) {\n      fetchElectiveCourseOptions(semester, encodedDepartment);\n      fetchOpenElectiveCourseOptions(semester, encodedDepartment);\n      fetchAddonCourseOptions(semester, encodedDepartment);\n    }\n  }, [semester, encodedDepartment]);\n\n  const handleCourseChange = (courseIndex, courseValue) => {\n    if (courseIndex === 1) {\n      setSelectedCourse1(courseValue);\n    } else if (courseIndex === 2) {\n      setSelectedCourse2(courseValue);\n    }\n  };\n\n  const handleOpenElectiveChange = e => {\n    setOpenElective(e.target.value);\n  };\n\n  const handleAddonCourseChange = e => {\n    setAddonCourse(e.target.value);\n  };\n\n  const fetchElectiveCourseOptions = async (semester, encodedDepartment) => {\n    try {\n      const response = await fetch(`http://localhost:5555/electivecourseoption/${semester}/${encodedDepartment}`);\n\n      if (response.ok) {\n        const data = await response.json();\n        const courseNames = data.map(course => course.course_name);\n        setElectiveCourseOptions(courseNames);\n      } else {\n        console.error(\"Failed to fetch elective course options\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching elective course options:\", error);\n    }\n  };\n\n  const fetchOpenElectiveCourseOptions = async (semester, encodedDepartment) => {\n    try {\n      const response = await fetch(`http://localhost:5555/openelectiveoption/${semester}/${encodedDepartment}`);\n\n      if (response.ok) {\n        const data = await response.json();\n        const courseNames = data.map(course => course.course_name);\n        setOpenElectiveCourseOptions(courseNames);\n      } else {\n        console.error(\"Failed to fetch open elective course options\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching open elective course options:\", error);\n    }\n  };\n\n  const fetchAddonCourseOptions = async (semester, encodedDepartment) => {\n    try {\n      const response = await fetch(`http://localhost:5555/addoncourseoption/${semester}/${encodedDepartment}`);\n\n      if (response.ok) {\n        const data = await response.json();\n        const courseNames = data.map(course => course.course_name);\n        setAddonCourseOptions(courseNames);\n      } else {\n        console.error(\"Failed to fetch addon course options\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching addon course options:\", error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Form data to submit\n      const newRegistration = {\n        rollno: sessionStorage.getItem(\"rollno\"),\n        name: sessionStorage.getItem(\"name\"),\n        academic_year: sessionStorage.getItem(\"batch\"),\n        semester: sessionStorage.getItem(\"semester\"),\n        department: sessionStorage.getItem(\"department\"),\n        honours: sessionStorage.getItem(\"honours\"),\n        electivecourse_1: selectedCourse1,\n        electivecourse_2: selectedCourse2,\n        open_electivecourse: openElective,\n        addon_course: addonCourse,\n        minours: sessionStorage.getItem(\"minours\")\n      };\n      const response = await fetch(\"http://localhost:5555/registerCourse\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newRegistration)\n      });\n\n      if (response.ok) {\n        console.log(\"Form submitted successfully\");\n        setSelectedCourse1(\"\");\n        setSelectedCourse2(\"\");\n        setOpenElective(\"\");\n        setAddonCourse(\"\");\n      } else {\n        console.error(\"Failed to submit form\"); // Handle error\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error); // Handle error\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Course Registration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Elective Course 1\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"mt-1\",\n    value: selectedCourse1,\n    onChange: e => handleCourseChange(1, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Select Course\"), electiveCourseOptions.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, course))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Elective Course 2\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"mt-1\",\n    value: selectedCourse2,\n    onChange: e => handleCourseChange(2, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Select Course\"), electiveCourseOptions.filter(course => course !== selectedCourse1) // Filter out the selected course for Elective Course 1\n  .map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, course))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Open Elective Course\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"mt-1\",\n    value: openElective,\n    onChange: handleOpenElectiveChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Select Course\"), openElectiveCourseOptions.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, course))))), sessionStorage.getItem(\"honours\") === \"NO\" && sessionStorage.getItem(\"minours\") === \"NO\" && addonCourseOptions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Addon Course\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"mt-1\",\n    value: addonCourse,\n    onChange: handleAddonCourseChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Select Course\"), addonCourseOptions.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, course))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n}\n\nexport default Forms;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/courseForms.js"],"names":["React","useState","useEffect","PageTitle","label","Select","Button","Forms","selectedCourse1","setSelectedCourse1","selectedCourse2","setSelectedCourse2","openElective","setOpenElective","addonCourse","setAddonCourse","electiveCourseOptions","setElectiveCourseOptions","openElectiveCourseOptions","setOpenElectiveCourseOptions","addonCourseOptions","setAddonCourseOptions","semester","sessionStorage","getItem","encodedDepartment","encodeURIComponent","fetchElectiveCourseOptions","fetchOpenElectiveCourseOptions","fetchAddonCourseOptions","handleCourseChange","courseIndex","courseValue","handleOpenElectiveChange","e","target","value","handleAddonCourseChange","response","fetch","ok","data","json","courseNames","map","course","course_name","console","error","handleSubmit","newRegistration","rollno","name","academic_year","department","honours","electivecourse_1","electivecourse_2","open_electivecourse","addon_course","minours","method","headers","body","JSON","stringify","log","index","filter","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport {label, Select, Button } from \"@windmill/react-ui\";\r\n\r\nfunction Forms() {\r\n  const [selectedCourse1, setSelectedCourse1] = useState(\"\");\r\n  const [selectedCourse2, setSelectedCourse2] = useState(\"\");\r\n  const [openElective, setOpenElective] = useState(\"\");\r\n  const [addonCourse, setAddonCourse] = useState(\"\");\r\n  const [electiveCourseOptions, setElectiveCourseOptions] = useState([]);\r\n  const [openElectiveCourseOptions, setOpenElectiveCourseOptions] = useState([]);\r\n  const [addonCourseOptions, setAddonCourseOptions] = useState([]);\r\n  const semester = sessionStorage.getItem(\"semester\");\r\n  const encodedDepartment = encodeURIComponent(sessionStorage.getItem(\"department\"));\r\n\r\n  useEffect(() => {\r\n    if (semester && encodedDepartment) {\r\n      fetchElectiveCourseOptions(semester, encodedDepartment);\r\n      fetchOpenElectiveCourseOptions(semester, encodedDepartment);\r\n      fetchAddonCourseOptions(semester, encodedDepartment);\r\n    }\r\n  }, [semester, encodedDepartment]);\r\n\r\n  const handleCourseChange = (courseIndex, courseValue) => {\r\n    if (courseIndex === 1) {\r\n      setSelectedCourse1(courseValue);\r\n    } else if (courseIndex === 2) {\r\n      setSelectedCourse2(courseValue);\r\n    }\r\n  };\r\n\r\n  const handleOpenElectiveChange = (e) => {\r\n    setOpenElective(e.target.value);\r\n  };\r\n\r\n  const handleAddonCourseChange = (e) => {\r\n    setAddonCourse(e.target.value);\r\n  };\r\n\r\n  const fetchElectiveCourseOptions = async (semester, encodedDepartment) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5555/electivecourseoption/${semester}/${encodedDepartment}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const courseNames = data.map((course) => course.course_name);\r\n        setElectiveCourseOptions(courseNames);\r\n      } else {\r\n        console.error(\"Failed to fetch elective course options\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching elective course options:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchOpenElectiveCourseOptions = async (semester, encodedDepartment) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5555/openelectiveoption/${semester}/${encodedDepartment}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const courseNames = data.map((course) => course.course_name);\r\n        setOpenElectiveCourseOptions(courseNames);\r\n      } else {\r\n        console.error(\"Failed to fetch open elective course options\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching open elective course options:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAddonCourseOptions = async (semester, encodedDepartment) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5555/addoncourseoption/${semester}/${encodedDepartment}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const courseNames = data.map((course) => course.course_name);\r\n        setAddonCourseOptions(courseNames);\r\n      } else {\r\n        console.error(\"Failed to fetch addon course options\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching addon course options:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Form data to submit\r\n      const newRegistration = {\r\n        rollno: sessionStorage.getItem(\"rollno\"),\r\n        name: sessionStorage.getItem(\"name\"),\r\n        academic_year: sessionStorage.getItem(\"batch\"),\r\n        semester: sessionStorage.getItem(\"semester\"),\r\n        department: sessionStorage.getItem(\"department\"),\r\n        honours: sessionStorage.getItem(\"honours\"),\r\n        electivecourse_1: selectedCourse1,\r\n        electivecourse_2: selectedCourse2,\r\n        open_electivecourse: openElective,\r\n        addon_course: addonCourse,\r\n        minours: sessionStorage.getItem(\"minours\"),\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:5555/registerCourse\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newRegistration),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Form submitted successfully\");\r\n        setSelectedCourse1(\"\");\r\n        setSelectedCourse2(\"\");\r\n        setOpenElective(\"\");\r\n        setAddonCourse(\"\");\r\n      } else {\r\n        console.error(\"Failed to submit form\");\r\n        // Handle error\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Course Registration</PageTitle>\r\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <div className=\"mt-4\">\r\n          <Label>Elective Course 1</Label>\r\n          <div className=\"mt-2\">\r\n            <Select\r\n              className=\"mt-1\"\r\n              value={selectedCourse1}\r\n              onChange={(e) => handleCourseChange(1, e.target.value)}\r\n            >\r\n              <option value=\"\">Select Course</option>\r\n              {electiveCourseOptions.map((course, index) => (\r\n                <option key={index} value={course}>\r\n                  {course}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <Label>Elective Course 2</Label>\r\n          <div className=\"mt-2\">\r\n            <Select\r\n              className=\"mt-1\"\r\n              value={selectedCourse2}\r\n              onChange={(e) => handleCourseChange(2, e.target.value)}\r\n            >\r\n              <option value=\"\">Select Course</option>\r\n              {electiveCourseOptions\r\n                .filter((course) => course !== selectedCourse1) // Filter out the selected course for Elective Course 1\r\n                .map((course, index) => (\r\n                  <option key={index} value={course}>\r\n                    {course}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\">\r\n          <Label>Open Elective Course</Label>\r\n          <div className=\"mt-2\">\r\n            <Select\r\n              className=\"mt-1\"\r\n              value={openElective}\r\n              onChange={handleOpenElectiveChange}\r\n            >\r\n              <option value=\"\">Select Course</option>\r\n              {openElectiveCourseOptions.map((course, index) => (\r\n                <option key={index} value={course}>\r\n                  {course}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        {sessionStorage.getItem(\"honours\") === \"NO\" &&\r\n          sessionStorage.getItem(\"minours\") === \"NO\" &&\r\n          addonCourseOptions.length > 0 && (\r\n            <div className=\"mt-4\">\r\n              <Label>Addon Course</Label>\r\n              <div className=\"mt-2\">\r\n                <Select\r\n                  className=\"mt-1\"\r\n                  value={addonCourse}\r\n                  onChange={handleAddonCourseChange}\r\n                >\r\n                  <option value=\"\">Select Course</option>\r\n                  {addonCourseOptions.map((course, index) => (\r\n                    <option key={index} value={course}>\r\n                      {course}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n        <div className=\"mt-5\">\r\n          <Button onClick={handleSubmit}>Register</Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Forms;\r\n"]},"metadata":{},"sourceType":"module"}