{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\myCourses.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport { GrTechnology } from \"react-icons/gr\";\nimport { FaBook, FaCode, FaDatabase } from \"react-icons/fa\";\nimport { SiCoursera } from \"react-icons/si\";\nconst curriculum = [{\n  id: 1,\n  icon: FaDatabase,\n  name: \"Database Management Systems\",\n  faculty: \"John Doe\"\n}, {\n  id: 2,\n  icon: FaCode,\n  name: \"Data Structures\",\n  faculty: \"John Doe\"\n}, {\n  id: 3,\n  icon: FaBook,\n  name: \"Computer Architecture\",\n  faculty: \"John Doe\"\n}, {\n  id: 4,\n  icon: GrTechnology,\n  name: \"Internet Of Things\",\n  faculty: \"John Doe\"\n}];\n\nfunction Mycourse() {\n  const rollno = \"7376211CS239\";\n  const semester = \"6\";\n  const [assignedcoursedata, setAssignedcoursedata] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`http://localhost:5555/myassignedcourse/${rollno}/${semester}`);\n        const data = await response.json();\n        const {\n          assignedcourses\n        } = data; // Extract the course names\n\n        const courseNames = {\n          elective_1: assignedcourses[0].electivecourse_1,\n          elective_2: assignedcourses[0].electivecourse_2,\n          open_elective: assignedcourses[0].open_electivecourse,\n          addon_course: assignedcourses[0].addon_course,\n          core_1: assignedcourses[0].course_name1,\n          core_2: assignedcourses[0].course_name2,\n          core_3: assignedcourses[0].course_name3,\n          core_4: assignedcourses[0].course_name4\n        };\n        setAssignedcoursedata(courseNames);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"My Course\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, Object.entries(assignedcoursedata).map(([key, value]) => /*#__PURE__*/React.createElement(Card, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RoundIcon, {\n    icon: getIcon(key),\n    iconColorClass: \"text-orange-500 dark:text-orange-100\",\n    bgColorClass: \"bg-orange-100 dark:bg-orange-500\",\n    className: \"mx-auto mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-lg font-semibold text-gray-700 dark:text-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, value)))))));\n}\n\nexport default Mycourse;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/myCourses.js"],"names":["React","useState","useEffect","PageTitle","Card","CardBody","RoundIcon","GrTechnology","FaBook","FaCode","FaDatabase","SiCoursera","curriculum","id","icon","name","faculty","Mycourse","rollno","semester","assignedcoursedata","setAssignedcoursedata","fetchData","response","fetch","data","json","assignedcourses","courseNames","elective_1","electivecourse_1","elective_2","electivecourse_2","open_elective","open_electivecourse","addon_course","core_1","course_name1","core_2","course_name2","core_3","course_name3","core_4","course_name4","error","console","Object","entries","map","key","value","getIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport { Card, CardBody } from \"@windmill/react-ui\";\r\nimport RoundIcon from \"../components/RoundIcon\";\r\nimport { GrTechnology } from \"react-icons/gr\";\r\nimport { FaBook, FaCode, FaDatabase } from \"react-icons/fa\";\r\nimport { SiCoursera } from \"react-icons/si\";\r\n\r\nconst curriculum = [\r\n  {\r\n    id: 1,\r\n    icon: FaDatabase,\r\n    name: \"Database Management Systems\",\r\n    faculty: \"John Doe\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: FaCode,\r\n    name: \"Data Structures\",\r\n    faculty: \"John Doe\",\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: FaBook,\r\n    name: \"Computer Architecture\",\r\n    faculty: \"John Doe\",\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: GrTechnology,\r\n    name: \"Internet Of Things\",\r\n    faculty: \"John Doe\",\r\n  },\r\n];\r\n\r\nfunction Mycourse() {\r\n  const rollno = \"7376211CS239\";\r\n  const semester = \"6\";\r\n  const [assignedcoursedata, setAssignedcoursedata] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5555/myassignedcourse/${rollno}/${semester}`\r\n        );\r\n        const data = await response.json();\r\n        const { assignedcourses } = data;\r\n        \r\n        // Extract the course names\r\n        const courseNames = {\r\n          elective_1: assignedcourses[0].electivecourse_1,\r\n          elective_2: assignedcourses[0].electivecourse_2,\r\n          open_elective: assignedcourses[0].open_electivecourse,\r\n          addon_course: assignedcourses[0].addon_course,\r\n          core_1: assignedcourses[0].course_name1,\r\n          core_2: assignedcourses[0].course_name2,\r\n          core_3: assignedcourses[0].course_name3,\r\n          core_4: assignedcourses[0].course_name4,\r\n        };\r\n  \r\n        setAssignedcoursedata(courseNames);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      <PageTitle>My Course</PageTitle>\r\n\r\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\r\n        {Object.entries(assignedcoursedata).map(([key, value]) => (\r\n          <Card key={key}>\r\n            <CardBody className=\"flex flex-col items-center\">\r\n              <RoundIcon\r\n                icon={getIcon(key)}\r\n                iconColorClass=\"text-orange-500 dark:text-orange-100\"\r\n                bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\r\n                className=\"mx-auto mb-4\"\r\n              />\r\n              <div className=\"text-center\">\r\n                <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">\r\n                  {value}\r\n                </p>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Mycourse;\r\n"]},"metadata":{},"sourceType":"module"}