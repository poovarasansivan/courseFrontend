{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\Tables.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Badge, Button, Pagination, Input } from \"@windmill/react-ui\";\nimport { FaDownload } from \"react-icons/fa6\";\nimport { EditIcon, TrashIcon } from \"../icons\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport response from \"../utils/demo/tableData\";\nimport * as XLSX from \"xlsx\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { Label } from \"@windmill/react-ui\"; // Make a copy of the data for the second table\n\nconst response2 = response.concat([]);\n\nfunction Tables() {\n  const [dataTable2, setDataTable2] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\n\n  const [editedData, setEditedData] = useState({}); // State \n\n  const resultsPerPage = 8;\n  const totalResults = response.length;\n  const [pageTable2, setPageTable2] = useState(1);\n  useEffect(() => {\n    fetchOverallStudentData();\n  }, []);\n\n  async function fetchOverallStudentData() {\n    try {\n      const response = await fetch(\"http://localhost:5555/students\");\n      const data = await response.json();\n      const mappedData = data.map(student => ({\n        rollno: student.rollno,\n        name: student.name,\n        email: student.email,\n        department: student.department,\n        batch: student.batch,\n        status: student.activestatus // Assuming 'activestatus' is the status field\n\n      }));\n      setDataTable2(mappedData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  } // console.log(dataTable2);\n\n\n  useEffect(() => {\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage));\n  }, [pageTable2]);\n\n  function openEditModal(rowData) {\n    setRowDataToEdit(rowData); // Set the data of the row being edited\n\n    setIsEditModalOpen(true);\n  }\n\n  function closeEditModal() {\n    setIsEditModalOpen(false);\n  }\n\n  function openDeleteModal(user) {\n    setRowDataToEdit(user); // Set the data of the row being deleted\n\n    setIsDeleteModalOpen(true);\n  }\n\n  function closeDeleteModal() {\n    setIsDeleteModalOpen(false);\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.rollno && user.rollno.toLowerCase().includes(searchTerm.toLowerCase()) || user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase()) || user.batch && user.batch.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  function handleSearchTermChange(event) {\n    setSearchTerm(event.target.value);\n  }\n\n  const fileInputRef = useRef(null); // Ref for file input element\n\n  function handleImportButtonClick() {\n    fileInputRef.current.click(); // Simulate click on file input\n  }\n\n  function handleImportFile(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      const fileName = file.name;\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\n\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\n        try {\n          const importedData = parseExcelData(event.target.result);\n          console.log(\"Imported Excel data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing Excel data:\", error);\n        }\n      } else if (fileExtension === \"csv\") {\n        try {\n          const importedData = parseCSVData(event.target.result);\n          console.log(\"Imported CSV data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing CSV data:\", error);\n        }\n      } else {\n        console.error(\"Unsupported file format\");\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.rollno && user.rollno.toLowerCase().includes(searchTerm.toLowerCase()) || user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase()) || user.batch && user.batch.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n\n  function parseExcelData(excelData) {\n    const workbook = XLSX.read(excelData, {\n      type: \"binary\"\n    });\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\n\n    const sheet = workbook.Sheets[sheetName]; // Convert the sheet data into an array of objects\n\n    const data = XLSX.utils.sheet_to_json(sheet, {\n      header: 1\n    }); // Assuming the first row contains headers\n\n    const headers = data[0]; // Start from the second row to parse data\n\n    const parsedData = data.slice(1).map(row => {\n      const rowData = {};\n      row.forEach((value, index) => {\n        rowData[headers[index]] = value;\n      });\n      return rowData;\n    });\n    console.log(parsedData);\n    return parsedData;\n  }\n\n  function parseCSVData(csvData) {\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\n\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\n\n    const parsedData = []; // Start from the second row to parse data\n\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = {};\n      const values = rows[i].split(\",\"); // Assign each value to its corresponding header\n\n      headers.forEach((header, index) => {\n        rowData[header] = values[index];\n      });\n      parsedData.push(rowData);\n    }\n\n    return parsedData;\n  }\n\n  function handleExportData() {\n    // Logic to export data as a CSV file\n    // This depends on the format of your data and how you want to export it\n    // Example logic:\n    let csvContent = \"Roll no,Name,Email,Department,Status\\n\";\n    dataTable2.forEach(user => {\n      // Check if user object has all required properties\n      if (user.rollno && user.name && user.email && user.department && user.batch) {\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.batch},${user.activestatus}\\n`;\n      }\n    });\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"student_details.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  console.log(dataTable2);\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  }\n\n  function handleUpdate() {\n    // Find the index of the row to be updated\n    const rowIndex = dataTable2.findIndex(row => row.rollno === rowDataToEdit.rollno);\n\n    if (rowIndex !== -1) {\n      // Update the row data with edited values\n      const updatedRowData = { ...dataTable2[rowIndex],\n        ...editedData\n      };\n      const updatedDataTable = [...dataTable2];\n      updatedDataTable[rowIndex] = updatedRowData;\n      setDataTable2(updatedDataTable);\n      closeEditModal(); // Close the modal after updating\n    }\n  }\n\n  function handleDelete() {\n    // Filter out the row to be deleted\n    const updatedDataTable = dataTable2.filter(row => row.rollno !== rowDataToEdit.rollno);\n    setDataTable2(updatedDataTable);\n    closeDeleteModal(); // Close the modal after deletion\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"Student Master\"), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-4 flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search...\",\n    value: searchTerm,\n    onChange: handleSearchTermChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleImportButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, \"Import\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls, .csv\",\n    onChange: handleImportFile,\n    id: \"import-file\",\n    style: {\n      display: \"none\"\n    },\n    ref: fileInputRef // Associate ref with file input\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaDownload, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-t-1 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, \"S no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, \"Roll no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"Batch\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, filteredData.map((user, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }, (pageTable2 - 1) * resultsPerPage + i + 1)), \" \", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 23\n    }\n  }, user.rollno)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, user.email)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, user.department)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, user.batch)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: user.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, user.activestatus)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Edit\",\n    onClick: () => openEditModal(user) // Pass the row data to the edit modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Delete\",\n    onClick: () => openDeleteModal(user) // Pass the row data to the delete modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable2,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isEditModalOpen,\n    onClose: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, \"Student Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, rowDataToEdit && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.rollno), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.department), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.batch), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"name\",\n    placeholder: \"Poovarasan\",\n    value: editedData.name || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"email\",\n    placeholder: \"poovarasan@bitsathy\",\n    value: editedData.email || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"department\",\n    placeholder: \"CSE\",\n    value: editedData.department || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, \"Accept\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isDeleteModalOpen,\n    onClose: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }\n  }, \"Student Deletion\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }, \"Your Deleting student Data\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/Tables.js"],"names":["React","useState","useEffect","useRef","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Badge","Button","Pagination","Input","FaDownload","EditIcon","TrashIcon","PageTitle","response","XLSX","Modal","ModalHeader","ModalBody","ModalFooter","Label","response2","concat","Tables","dataTable2","setDataTable2","filteredData","setFilteredData","searchTerm","setSearchTerm","isEditModalOpen","setIsEditModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","rowDataToEdit","setRowDataToEdit","editedData","setEditedData","resultsPerPage","totalResults","length","pageTable2","setPageTable2","fetchOverallStudentData","fetch","data","json","mappedData","map","student","rollno","name","email","department","batch","status","activestatus","error","console","slice","openEditModal","rowData","closeEditModal","openDeleteModal","user","closeDeleteModal","filter","toLowerCase","includes","onPageChangeTable2","p","handleSearchTermChange","event","target","value","fileInputRef","handleImportButtonClick","current","click","handleImportFile","file","files","reader","FileReader","onload","fileName","fileExtension","split","pop","importedData","parseExcelData","result","log","parseCSVData","readAsBinaryString","excelData","workbook","read","type","sheetName","SheetNames","sheet","Sheets","utils","sheet_to_json","header","headers","parsedData","row","forEach","index","csvData","rows","i","values","push","handleExportData","csvContent","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","revokeObjectURL","handleInputChange","prevData","handleUpdate","rowIndex","findIndex","updatedRowData","updatedDataTable","handleDelete","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Badge,\r\n  Button,\r\n  Pagination,\r\n  Input,\r\n} from \"@windmill/react-ui\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport response from \"../utils/demo/tableData\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\n// Make a copy of the data for the second table\r\nconst response2 = response.concat([]);\r\n\r\nfunction Tables() {\r\n  const [dataTable2, setDataTable2] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\r\n  const [editedData, setEditedData] = useState({}); // State \r\n\r\n  const resultsPerPage = 8;\r\n  const totalResults = response.length;\r\n\r\n  const [pageTable2, setPageTable2] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchOverallStudentData();\r\n  }, []);\r\n\r\n  async function fetchOverallStudentData() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5555/students\");\r\n      const data = await response.json();\r\n      const mappedData = data.map((student) => ({\r\n        rollno: student.rollno,\r\n        name: student.name,\r\n        email: student.email,\r\n        department: student.department,\r\n        batch: student.batch,\r\n        status: student.activestatus // Assuming 'activestatus' is the status field\r\n      }));\r\n      setDataTable2(mappedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n  \r\n// console.log(dataTable2);\r\n  useEffect(() => {\r\n    setDataTable2(\r\n      response2.slice(\r\n        (pageTable2 - 1) * resultsPerPage,\r\n        pageTable2 * resultsPerPage\r\n      )\r\n    );\r\n  }, [pageTable2]);\r\n\r\n  function openEditModal(rowData) {\r\n    setRowDataToEdit(rowData); // Set the data of the row being edited\r\n    setIsEditModalOpen(true);\r\n  }\r\n\r\n  function closeEditModal() {\r\n    setIsEditModalOpen(false);\r\n  }\r\n\r\n  function openDeleteModal(user) {\r\n    setRowDataToEdit(user); // Set the data of the row being deleted\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  function closeDeleteModal() {\r\n    setIsDeleteModalOpen(false);\r\n  }\r\n\r\nuseEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.rollno &&\r\n            user.rollno.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.name &&\r\n            user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.email &&\r\n            user.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.batch &&\r\n            user.batch.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  function onPageChangeTable2(p) {\r\n    setPageTable2(p);\r\n  }\r\n\r\n  function handleSearchTermChange(event) {\r\n    setSearchTerm(event.target.value);\r\n  }\r\n\r\n  const fileInputRef = useRef(null); // Ref for file input element\r\n\r\n  function handleImportButtonClick() {\r\n    fileInputRef.current.click(); // Simulate click on file input\r\n  }\r\n  function handleImportFile(event) {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileName = file.name;\r\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\r\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\r\n        try {\r\n          const importedData = parseExcelData(event.target.result);\r\n          console.log(\"Imported Excel data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing Excel data:\", error);\r\n        }\r\n      } else if (fileExtension === \"csv\") {\r\n        try {\r\n          const importedData = parseCSVData(event.target.result);\r\n          console.log(\"Imported CSV data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing CSV data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Unsupported file format\");\r\n      }\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.rollno &&\r\n            user.rollno.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.name &&\r\n            user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.email &&\r\n            user.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.batch &&\r\n            user.batch.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  function parseExcelData(excelData) {\r\n    const workbook = XLSX.read(excelData, { type: \"binary\" });\r\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\r\n    const sheet = workbook.Sheets[sheetName];\r\n    // Convert the sheet data into an array of objects\r\n    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n    // Assuming the first row contains headers\r\n    const headers = data[0];\r\n    // Start from the second row to parse data\r\n    const parsedData = data.slice(1).map((row) => {\r\n      const rowData = {};\r\n      row.forEach((value, index) => {\r\n        rowData[headers[index]] = value;\r\n      });\r\n      return rowData;\r\n    });\r\n    console.log(parsedData);\r\n    return parsedData;\r\n  }\r\n  function parseCSVData(csvData) {\r\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\r\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\r\n    const parsedData = [];\r\n    // Start from the second row to parse data\r\n    for (let i = 1; i < rows.length; i++) {\r\n      const rowData = {};\r\n      const values = rows[i].split(\",\");\r\n      // Assign each value to its corresponding header\r\n      headers.forEach((header, index) => {\r\n        rowData[header] = values[index];\r\n      });\r\n      parsedData.push(rowData);\r\n    }\r\n    return parsedData;\r\n  }\r\n\r\n  function handleExportData() {\r\n    // Logic to export data as a CSV file\r\n    // This depends on the format of your data and how you want to export it\r\n    // Example logic:\r\n    let csvContent = \"Roll no,Name,Email,Department,Status\\n\";\r\n    dataTable2.forEach((user) => {\r\n      // Check if user object has all required properties\r\n      if (\r\n        user.rollno &&\r\n        user.name &&\r\n        user.email &&\r\n        user.department &&\r\n        user.batch\r\n      ) {\r\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.batch},${user.activestatus}\\n`;\r\n      }\r\n    });\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"student_details.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n  console.log(dataTable2);\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleUpdate() {\r\n    // Find the index of the row to be updated\r\n    const rowIndex = dataTable2.findIndex(\r\n      (row) => row.rollno === rowDataToEdit.rollno\r\n    );\r\n    if (rowIndex !== -1) {\r\n      // Update the row data with edited values\r\n      const updatedRowData = { ...dataTable2[rowIndex], ...editedData };\r\n      const updatedDataTable = [...dataTable2];\r\n      updatedDataTable[rowIndex] = updatedRowData;\r\n      setDataTable2(updatedDataTable);\r\n      closeEditModal(); // Close the modal after updating\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    // Filter out the row to be deleted\r\n    const updatedDataTable = dataTable2.filter(\r\n      (row) => row.rollno !== rowDataToEdit.rollno\r\n    );\r\n    setDataTable2(updatedDataTable);\r\n    closeDeleteModal(); // Close the modal after deletion\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Student Master</PageTitle>\r\n\r\n      <TableContainer className=\"mb-8\">\r\n        <div className=\"m-4 flex justify-between items-center\">\r\n          <div className=\"flex justify-start items-center\">\r\n            <Input\r\n              placeholder=\"Search...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchTermChange}\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end items-center\">\r\n            <Button onClick={handleImportButtonClick}>Import</Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx, .xls, .csv\"\r\n              onChange={handleImportFile}\r\n              id=\"import-file\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef} // Associate ref with file input\r\n            />\r\n\r\n            {/* Add a gap between import and download button */}\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={handleExportData}>\r\n              <FaDownload className=\"w-5 h-5\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr className=\"border-t-1 w-full\" />\r\n\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>S no</TableCell>\r\n              <TableCell>Roll no</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Department</TableCell>\r\n              <TableCell>Batch</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredData.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <span className=\"text-sm\">\r\n                    {(pageTable2 - 1) * resultsPerPage + i + 1}\r\n                  </span>\r\n                </TableCell>{\" \"}\r\n                {/* Calculate S.no */}\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.rollno}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.name}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.email}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.department}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.batch}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type={user.status}>{user.activestatus}</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Edit\"\r\n                      onClick={() => openEditModal(user)} // Pass the row data to the edit modal\r\n                    >\r\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Delete\"\r\n                      onClick={() => openDeleteModal(user)} // Pass the row data to the delete modal\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable2}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n      <div></div>\r\n      <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n        <ModalHeader>Student Details</ModalHeader>\r\n        <ModalBody>\r\n          {/* Display the row data in the modal */}\r\n          {rowDataToEdit && (\r\n            <>\r\n              <p>{rowDataToEdit.rollno}</p>\r\n              <p>{rowDataToEdit.name}</p>\r\n              <p>{rowDataToEdit.email}</p>\r\n              <p>{rowDataToEdit.department}</p>\r\n              <p>{rowDataToEdit.batch}</p>\r\n              <Label className=\"mt-4\">\r\n                <span>Name</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"name\"\r\n                  placeholder=\"Poovarasan\"\r\n                  value={editedData.name || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Email</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"email\"\r\n                  placeholder=\"poovarasan@bitsathy\"\r\n                  value={editedData.email || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Department</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"department\"\r\n                  placeholder=\"CSE\"\r\n                  value={editedData.department || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n\r\n              {/* Add input fields for editing */}\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeEditModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleUpdate}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal isOpen={isDeleteModalOpen} onClose={closeDeleteModal}>\r\n        <ModalHeader>Student Deletion</ModalHeader>\r\n        <ModalBody>Your Deleting student Data</ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeDeleteModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleDelete}>Delete</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeDeleteModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}