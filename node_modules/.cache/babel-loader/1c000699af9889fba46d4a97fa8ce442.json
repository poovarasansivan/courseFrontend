{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\windmill-dashboard-react\\\\src\\\\pages\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport CTA from '../components/CTA';\nimport InfoCard from '../components/Cards/InfoCard';\nimport ChartCard from '../components/Chart/ChartCard';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport ChartLegend from '../components/Chart/ChartLegend';\nimport PageTitle from '../components/Typography/PageTitle';\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from '../icons';\nimport RoundIcon from '../components/RoundIcon';\nimport response from '../utils/demo/tableData';\nimport { TableBody, TableContainer, Table, TableHeader, TableCell, TableRow, TableFooter, Avatar, Badge, Pagination } from '@windmill/react-ui';\nimport { doughnutOptions, lineOptions, doughnutLegends, lineLegends } from '../utils/demo/chartsData';\n\nfunction Dashboard() {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]); // pagination setup\n\n  const resultsPerPage = 10;\n  const totalResults = response.length; // pagination change control\n\n  function onPageChange(p) {\n    setPage(p);\n  } // on page change, load new sliced data\n  // here you would make another server request for new data\n\n\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Total clients\",\n    value: \"6389\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoundIcon, {\n    icon: PeopleIcon,\n    iconColorClass: \"text-orange-500 dark:text-orange-100\",\n    bgColorClass: \"bg-orange-100 dark:bg-orange-500\",\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Account balance\",\n    value: \"$ 46,760.89\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoundIcon, {\n    icon: MoneyIcon,\n    iconColorClass: \"text-green-500 dark:text-green-100\",\n    bgColorClass: \"bg-green-100 dark:bg-green-500\",\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"New sales\",\n    value: \"376\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoundIcon, {\n    icon: CartIcon,\n    iconColorClass: \"text-blue-500 dark:text-blue-100\",\n    bgColorClass: \"bg-blue-100 dark:bg-blue-500\",\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Pending contacts\",\n    value: \"35\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoundIcon, {\n    icon: ChatIcon,\n    iconColorClass: \"text-teal-500 dark:text-teal-100\",\n    bgColorClass: \"bg-teal-100 dark:bg-teal-500\",\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/fullstack2025/windmill-dashboard-react/src/pages/Dashboard.js"],"names":["React","useState","useEffect","CTA","InfoCard","ChartCard","Doughnut","Line","ChartLegend","PageTitle","ChatIcon","CartIcon","MoneyIcon","PeopleIcon","RoundIcon","response","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Badge","Pagination","doughnutOptions","lineOptions","doughnutLegends","lineLegends","Dashboard","page","setPage","data","setData","resultsPerPage","totalResults","length","onPageChange","p","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport CTA from '../components/CTA'\r\nimport InfoCard from '../components/Cards/InfoCard'\r\nimport ChartCard from '../components/Chart/ChartCard'\r\nimport { Doughnut, Line } from 'react-chartjs-2'\r\nimport ChartLegend from '../components/Chart/ChartLegend'\r\nimport PageTitle from '../components/Typography/PageTitle'\r\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from '../icons'\r\nimport RoundIcon from '../components/RoundIcon'\r\nimport response from '../utils/demo/tableData'\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Pagination,\r\n} from '@windmill/react-ui'\r\n\r\nimport {\r\n  doughnutOptions,\r\n  lineOptions,\r\n  doughnutLegends,\r\n  lineLegends,\r\n} from '../utils/demo/chartsData'\r\n\r\nfunction Dashboard() {\r\n  const [page, setPage] = useState(1)\r\n  const [data, setData] = useState([])\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10\r\n  const totalResults = response.length\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p)\r\n  }\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  useEffect(() => {\r\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage))\r\n  }, [page])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Dashboard</PageTitle>\r\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\r\n        <InfoCard title=\"Total clients\" value=\"6389\">\r\n          <RoundIcon\r\n            icon={PeopleIcon}\r\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\r\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"Account balance\" value=\"$ 46,760.89\">\r\n          <RoundIcon\r\n            icon={MoneyIcon}\r\n            iconColorClass=\"text-green-500 dark:text-green-100\"\r\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"New sales\" value=\"376\">\r\n          <RoundIcon\r\n            icon={CartIcon}\r\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\r\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"Pending contacts\" value=\"35\">\r\n          <RoundIcon\r\n            icon={ChatIcon}\r\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\r\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}