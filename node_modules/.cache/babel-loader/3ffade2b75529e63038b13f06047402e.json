{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\Tables.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Badge, Button, Pagination, Input } from \"@windmill/react-ui\";\nimport { FaDownload } from \"react-icons/fa6\";\nimport { EditIcon, TrashIcon } from \"../icons\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport response from \"../utils/demo/tableData\";\nimport * as XLSX from \"xlsx\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\"; // Make a copy of the data for the second table\n\nconst response2 = response.concat([]);\n\nfunction Tables() {\n  const [dataTable2, setDataTable2] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null); // Store selected user data\n\n  const resultsPerPage = 8;\n  const totalResults = response.length;\n  const [pageTable2, setPageTable2] = useState(1);\n  useEffect(() => {\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage));\n  }, [pageTable2]);\n\n  function openEditModal(rowData) {\n    setRowDataToEdit(rowData); // Set the data of the row being edited\n\n    setIsEditModalOpen(true);\n  }\n\n  function closeEditModal() {\n    setIsEditModalOpen(false);\n  }\n\n  function openDeleteModal() {\n    setIsDeleteModalOpen(true);\n  }\n\n  function closeDeleteModal() {\n    setIsDeleteModalOpen(false);\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.rollno && user.rollno.toLowerCase().includes(searchTerm.toLowerCase()) || user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  function handleSearchTermChange(event) {\n    setSearchTerm(event.target.value);\n  }\n\n  const fileInputRef = useRef(null); // Ref for file input element\n\n  function handleImportButtonClick() {\n    fileInputRef.current.click(); // Simulate click on file input\n  }\n\n  function handleImportFile(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      const fileName = file.name;\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\n\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\n        try {\n          const importedData = parseExcelData(event.target.result);\n          console.log(\"Imported Excel data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing Excel data:\", error);\n        }\n      } else if (fileExtension === \"csv\") {\n        try {\n          const importedData = parseCSVData(event.target.result);\n          console.log(\"Imported CSV data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing CSV data:\", error);\n        }\n      } else {\n        console.error(\"Unsupported file format\");\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.rollno && user.rollno.toLowerCase().includes(searchTerm.toLowerCase()) || user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n\n  function parseExcelData(excelData) {\n    const workbook = XLSX.read(excelData, {\n      type: \"binary\"\n    });\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\n\n    const sheet = workbook.Sheets[sheetName]; // Convert the sheet data into an array of objects\n\n    const data = XLSX.utils.sheet_to_json(sheet, {\n      header: 1\n    }); // Assuming the first row contains headers\n\n    const headers = data[0]; // Start from the second row to parse data\n\n    const parsedData = data.slice(1).map(row => {\n      const rowData = {};\n      row.forEach((value, index) => {\n        rowData[headers[index]] = value;\n      });\n      return rowData;\n    });\n    console.log(parsedData);\n    return parsedData;\n  }\n\n  function parseCSVData(csvData) {\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\n\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\n\n    const parsedData = []; // Start from the second row to parse data\n\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = {};\n      const values = rows[i].split(\",\"); // Assign each value to its corresponding header\n\n      headers.forEach((header, index) => {\n        rowData[header] = values[index];\n      });\n      parsedData.push(rowData);\n    }\n\n    return parsedData;\n  }\n\n  function handleExportData() {\n    // Logic to export data as a CSV file\n    // This depends on the format of your data and how you want to export it\n    // Example logic:\n    let csvContent = \"Roll no,Name,Email,Department,Status\\n\";\n    dataTable2.forEach(user => {\n      // Check if user object has all required properties\n      if (user.rollno && user.name && user.email && user.department) {\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.activestatus}\\n`;\n      }\n    });\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"student_details.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  console.log(dataTable2);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"Student Master\"), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-4 flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search...\",\n    value: searchTerm,\n    onChange: handleSearchTermChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleImportButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Import\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls, .csv\",\n    onChange: handleImportFile,\n    id: \"import-file\",\n    style: {\n      display: \"none\"\n    },\n    ref: fileInputRef // Associate ref with file input\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaDownload, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-t-1 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, \"S no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, \"Roll no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, filteredData.map((user, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, (pageTable2 - 1) * resultsPerPage + i + 1)), \" \", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, user.rollno)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, user.email)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, user.department)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: user.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, user.activestatus)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Edit\",\n    onClick: () => openEditModal(user) // Pass the row data to the edit modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Delete\",\n    onClick: openDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable2,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isEditModalOpen,\n    onClose: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, \"Student Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, rowDataToEdit && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.rollno), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.department))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Accept\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isDeleteModalOpen,\n    onClose: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, \"Student Deletion\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }, \"Your Deleting student Data\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, \"Accept\")))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/Tables.js"],"names":["React","useState","useEffect","useRef","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Badge","Button","Pagination","Input","FaDownload","EditIcon","TrashIcon","PageTitle","response","XLSX","Modal","ModalHeader","ModalBody","ModalFooter","response2","concat","Tables","dataTable2","setDataTable2","filteredData","setFilteredData","searchTerm","setSearchTerm","isEditModalOpen","setIsEditModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","selectedUser","setSelectedUser","resultsPerPage","totalResults","length","pageTable2","setPageTable2","slice","openEditModal","rowData","setRowDataToEdit","closeEditModal","openDeleteModal","closeDeleteModal","filter","user","rollno","toLowerCase","includes","name","email","department","onPageChangeTable2","p","handleSearchTermChange","event","target","value","fileInputRef","handleImportButtonClick","current","click","handleImportFile","file","files","reader","FileReader","onload","fileName","fileExtension","split","pop","importedData","parseExcelData","result","console","log","error","parseCSVData","readAsBinaryString","excelData","workbook","read","type","sheetName","SheetNames","sheet","Sheets","data","utils","sheet_to_json","header","headers","parsedData","map","row","forEach","index","csvData","rows","i","values","push","handleExportData","csvContent","activestatus","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","revokeObjectURL","display","width","status","rowDataToEdit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Badge,\r\n  Button,\r\n  Pagination,\r\n  Input,\r\n} from \"@windmill/react-ui\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport response from \"../utils/demo/tableData\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\r\n\r\n// Make a copy of the data for the second table\r\nconst response2 = response.concat([]);\r\n\r\nfunction Tables() {\r\n  const [dataTable2, setDataTable2] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null); // Store selected user data\r\n\r\n  const resultsPerPage = 8;\r\n  const totalResults = response.length;\r\n\r\n  const [pageTable2, setPageTable2] = useState(1);\r\n  useEffect(() => {\r\n    setDataTable2(\r\n      response2.slice(\r\n        (pageTable2 - 1) * resultsPerPage,\r\n        pageTable2 * resultsPerPage\r\n      )\r\n    );\r\n  }, [pageTable2]);\r\n\r\n  function openEditModal(rowData) {\r\n    setRowDataToEdit(rowData); // Set the data of the row being edited\r\n    setIsEditModalOpen(true);\r\n  }\r\n\r\n  function closeEditModal() {\r\n    setIsEditModalOpen(false);\r\n  }\r\n\r\n  function openDeleteModal() {\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  function closeDeleteModal() {\r\n    setIsDeleteModalOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.rollno &&\r\n            user.rollno.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.name &&\r\n            user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.email &&\r\n            user.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  function onPageChangeTable2(p) {\r\n    setPageTable2(p);\r\n  }\r\n\r\n  function handleSearchTermChange(event) {\r\n    setSearchTerm(event.target.value);\r\n  }\r\n\r\n  const fileInputRef = useRef(null); // Ref for file input element\r\n\r\n  function handleImportButtonClick() {\r\n    fileInputRef.current.click(); // Simulate click on file input\r\n  }\r\n  function handleImportFile(event) {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileName = file.name;\r\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\r\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\r\n        try {\r\n          const importedData = parseExcelData(event.target.result);\r\n          console.log(\"Imported Excel data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing Excel data:\", error);\r\n        }\r\n      } else if (fileExtension === \"csv\") {\r\n        try {\r\n          const importedData = parseCSVData(event.target.result);\r\n          console.log(\"Imported CSV data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing CSV data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Unsupported file format\");\r\n      }\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.rollno &&\r\n            user.rollno.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.name &&\r\n            user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.email &&\r\n            user.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  function parseExcelData(excelData) {\r\n    const workbook = XLSX.read(excelData, { type: \"binary\" });\r\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\r\n    const sheet = workbook.Sheets[sheetName];\r\n    // Convert the sheet data into an array of objects\r\n    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n    // Assuming the first row contains headers\r\n    const headers = data[0];\r\n    // Start from the second row to parse data\r\n    const parsedData = data.slice(1).map((row) => {\r\n      const rowData = {};\r\n      row.forEach((value, index) => {\r\n        rowData[headers[index]] = value;\r\n      });\r\n      return rowData;\r\n    });\r\n    console.log(parsedData);\r\n    return parsedData;\r\n  }\r\n  function parseCSVData(csvData) {\r\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\r\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\r\n    const parsedData = [];\r\n    // Start from the second row to parse data\r\n    for (let i = 1; i < rows.length; i++) {\r\n      const rowData = {};\r\n      const values = rows[i].split(\",\");\r\n      // Assign each value to its corresponding header\r\n      headers.forEach((header, index) => {\r\n        rowData[header] = values[index];\r\n      });\r\n      parsedData.push(rowData);\r\n    }\r\n    return parsedData;\r\n  }\r\n\r\n  function handleExportData() {\r\n    // Logic to export data as a CSV file\r\n    // This depends on the format of your data and how you want to export it\r\n    // Example logic:\r\n    let csvContent = \"Roll no,Name,Email,Department,Status\\n\";\r\n    dataTable2.forEach((user) => {\r\n      // Check if user object has all required properties\r\n      if (user.rollno && user.name && user.email && user.department) {\r\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.activestatus}\\n`;\r\n      }\r\n    });\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"student_details.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n  console.log(dataTable2);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Student Master</PageTitle>\r\n\r\n      <TableContainer className=\"mb-8\">\r\n        <div className=\"m-4 flex justify-between items-center\">\r\n          <div className=\"flex justify-start items-center\">\r\n            <Input\r\n              placeholder=\"Search...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchTermChange}\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end items-center\">\r\n            <Button onClick={handleImportButtonClick}>Import</Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx, .xls, .csv\"\r\n              onChange={handleImportFile}\r\n              id=\"import-file\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef} // Associate ref with file input\r\n            />\r\n\r\n            {/* Add a gap between import and download button */}\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={handleExportData}>\r\n              <FaDownload className=\"w-5 h-5\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr className=\"border-t-1 w-full\" />\r\n\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>S no</TableCell>\r\n              <TableCell>Roll no</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Department</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredData.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <span className=\"text-sm\">\r\n                    {(pageTable2 - 1) * resultsPerPage + i + 1}\r\n                  </span>\r\n                </TableCell>{\" \"}\r\n                {/* Calculate S.no */}\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.rollno}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.name}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.email}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.department}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type={user.status}>{user.activestatus}</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Edit\"\r\n                      onClick={() => openEditModal(user)} // Pass the row data to the edit modal\r\n                    >\r\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Delete\"\r\n                      onClick={openDeleteModal}\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable2}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n      <div></div>\r\n      <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n        <ModalHeader>Student Details</ModalHeader>\r\n        <ModalBody>\r\n          {/* Display the row data in the modal */}\r\n          {rowDataToEdit && (\r\n            <>\r\n              <p>{rowDataToEdit.rollno}</p>\r\n              <p>{rowDataToEdit.name}</p>\r\n              <p>{rowDataToEdit.email}</p>\r\n              <p>{rowDataToEdit.department}</p>\r\n              {/* Add input fields for editing */}\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeEditModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal isOpen={isDeleteModalOpen} onClose={closeDeleteModal}>\r\n        <ModalHeader>Student Deletion</ModalHeader>\r\n        <ModalBody>Your Deleting student Data</ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeDeleteModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button>Delete</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeDeleteModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\">\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}