{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\courseMaster.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Badge, Button, Pagination, Input } from \"@windmill/react-ui\";\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\nimport { FaDownload } from \"react-icons/fa6\";\nimport { EditIcon, TrashIcon } from \"../icons\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport * as XLSX from \"xlsx\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { Label, Select } from \"@windmill/react-ui\";\nconst coursetype = [\"CoreSubject\", \"Elective Course\", \"Open Elective Course\", \"Addon Course\", \"Honours Course\", \"Minors Course\"];\n\nfunction Tables() {\n  const [dataTable2, setDataTable2] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedAttribute, setSelectedAttribute] = useState(\"\"); // State to hold selected attribute\n\n  const [filterValue, setFilterValue] = useState(\"\"); //\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\n\n  const [editedData, setEditedData] = useState({}); // State\n\n  const [isAddStudentModalOpen, setAddStudentModalOpen] = useState(false);\n  const [selectedCourseType, setSelectedCourseType] = useState(\"\");\n  const [courseId, setCourseId] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [courseFaculty, setCourseFaculty] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [semester, setSemester] = useState(\"\");\n  const resultsPerPage = 8;\n  const totalResults = dataTable2.length;\n  const [pageTable2, setPageTable2] = useState(1);\n  useEffect(() => {\n    fetchOverallCourseData();\n  }, []);\n\n  function addStudentModalOpen() {\n    setAddStudentModalOpen(true);\n  }\n\n  function closeaddStudentModalOpen() {\n    setAddStudentModalOpen(false);\n  }\n\n  const handleCourseNameChange = e => {\n    setCourseName(e.target.value);\n  };\n\n  const handleCourseIdChange = e => {\n    setCourseId(e.target.value);\n  };\n\n  const handleCourseFacultyChange = e => {\n    setCourseFaculty(e.target.value);\n  };\n\n  const handleDepartmentChange = e => {\n    setDepartment(e.target.value);\n  };\n\n  const handleSemesterChange = e => {\n    setSemester(e.target.value);\n  };\n\n  const handleCourseTypeChange = e => {\n    setSelectedCourseType(e.target.value);\n  };\n\n  console.log(selectedCourseType);\n\n  const handleformsubmit = async () => {\n    try {\n      let apiUrl; // Determine the API endpoint based on the selected course type\n\n      if (selectedCourseType == \"CoreSubject\") {\n        apiUrl = \"http://localhost:5555/addcoresubject\";\n      } else if (selectedCourseType == \"Elective Course\") {\n        apiUrl = \"http://localhost:5555/addelectivesubject\";\n      } else if (selectedCourseType == \"Open Elective Course\") {\n        apiUrl = \"http://localhost:5555/addopenelectivesubject\";\n      } else if (selectedCourseType == \"Addon Course\") {\n        apiUrl = \"http://localhost:5555/addonCourseSubject\";\n      } else if (selectedCourseType == \"Honours Course\") {\n        apiUrl = \"http://localhost:5555/AddHonours\";\n      } else if (selectedCourseType == \"Minors Course\") {\n        apiUrl = \"http://localhost:5555/AddMinours\";\n      } else {\n        console.error(\"Invalid course type\");\n        return;\n      }\n\n      const newCourse = {\n        course_id: courseId,\n        course_name: courseName,\n        course_faculty: courseFaculty,\n        department: department,\n        semester: semester,\n        courseType: selectedCourseType\n      };\n      console.log(newCourse);\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([newCourse]) // Passing an array containing newCourse\n\n      });\n\n      if (response.ok) {\n        console.log(\"Form Data sent successfully\");\n        closeaddStudentModalOpen();\n      } else {\n        console.error(\"Failed to send form data\");\n      }\n    } catch (error) {\n      console.error(\"Error sending form data:\", error);\n    }\n  };\n\n  async function fetchOverallCourseData() {\n    try {\n      const response = await fetch(\"http://localhost:5555/coursemaster\");\n      const data = await response.json();\n      const mappedData = data.courses.map(course => ({\n        course_id: course.course_id,\n        course_name: course.course_name,\n        course_faculty: course.course_faculty,\n        department: course.department,\n        semester: course.semester,\n        coursetype: course.coursetype\n      }));\n      setDataTable2(mappedData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.course_id && user.course_id.toLowerCase().includes(searchTerm.toLowerCase()) || user.course_name && user.course_name.toLowerCase().includes(searchTerm.toLowerCase()) || user.course_faculty && user.course_faculty.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase()) || String(user.semester) && // Ensure semester is treated as a string\n    String(user.semester).toLowerCase().includes(searchTerm.toLowerCase()) || user.coursetype && user.coursetype.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n  useEffect(() => {\n    const startIndex = (pageTable2 - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    setFilteredData(dataTable2.slice(startIndex, endIndex));\n  }, [pageTable2, dataTable2]);\n\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  function handleSearchTermChange(event) {\n    setSearchTerm(event.target.value);\n  }\n\n  const fileInputRef = useRef(null); // Ref for file input element\n\n  function handleImportButtonClick() {\n    fileInputRef.current.click(); // Simulate click on file input\n  }\n\n  function handleImportFile(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      const fileName = file.name;\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\n\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\n        try {\n          const importedData = parseExcelData(event.target.result);\n          console.log(\"Imported Excel data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing Excel data:\", error);\n        }\n      } else if (fileExtension === \"csv\") {\n        try {\n          const importedData = parseCSVData(event.target.result);\n          console.log(\"Imported CSV data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing CSV data:\", error);\n        }\n      } else {\n        console.error(\"Unsupported file format\");\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  function parseExcelData(excelData) {\n    const workbook = XLSX.read(excelData, {\n      type: \"binary\"\n    });\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\n\n    const sheet = workbook.Sheets[sheetName]; // Convert the sheet data into an array of objects\n\n    const data = XLSX.utils.sheet_to_json(sheet, {\n      header: 1\n    }); // Assuming the first row contains headers\n\n    const headers = data[0]; // Start from the second row to parse data\n\n    const parsedData = data.slice(1).map(row => {\n      const rowData = {};\n      row.forEach((value, index) => {\n        rowData[headers[index]] = value;\n      });\n      return rowData;\n    });\n    console.log(parsedData);\n    return parsedData;\n  }\n\n  function parseCSVData(csvData) {\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\n\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\n\n    const parsedData = []; // Start from the second row to parse data\n\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = {};\n      const values = rows[i].split(\",\"); // Assign each value to its corresponding header\n\n      headers.forEach((header, index) => {\n        rowData[header] = values[index];\n      });\n      parsedData.push(rowData);\n    }\n\n    return parsedData;\n  }\n\n  function handleExportData() {\n    let csvContent = \"Course ID,Course Name,Course Faculty Name,Department,Semester,Coursetype\\n\";\n    dataTable2.forEach(user => {\n      if (user.course_id && user.course_name && user.course_faculty && user.department && user.semester && user.coursetype) {\n        csvContent += `${user.course_id},${user.course_name},${user.course_faculty},${user.department},${user.semester},${user.coursetype}\\n`;\n      }\n    });\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"course_details.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  }\n\n  async function handleUpdate() {\n    const rowIndex = dataTable2.findIndex(row => row.course_id === rowDataToEdit.course_id); // Assuming course_id is the unique identifier\n\n    if (rowIndex !== -1) {\n      const updatedRowData = { ...dataTable2[rowIndex],\n        ...editedData\n      };\n      const updatedDataTable = [...dataTable2];\n      updatedDataTable[rowIndex] = updatedRowData;\n      setDataTable2(updatedDataTable);\n      closeEditModal();\n      let apiUrl;\n\n      if (updatedRowData.coursetype === \"Coresubject\") {\n        apiUrl = \"http://localhost:5555/editcoresubject\";\n      } else if (updatedRowData.coursetype === \"Addon Course\") {\n        apiUrl = \"http://localhost:5555/editaddoncourse\";\n      } else if (updatedRowData.coursetype === \"Elective Course\") {\n        apiUrl = \"http://localhost:5555/editelective\";\n      } else if (updatedRowData.coursetype === \"Openelective Course\") {\n        apiUrl = \"http://localhost:5555/editopenelective\";\n      } else if (updatedRowData.coursetype === \"Honours Course\") {\n        apiUrl = \"http://localhost:5555/edithonours\";\n      } else {\n        apiUrl = \"http://localhost:5555/editminours\";\n      }\n\n      updateDataInBackend(updatedRowData, apiUrl);\n    }\n  }\n\n  async function updateDataInBackend(updatedRowData, apiUrl) {\n    try {\n      const response = await fetch(`${apiUrl}/${updatedRowData.course_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedRowData)\n      });\n\n      if (response.ok) {\n        console.log(\"Data updated successfully\");\n      } else {\n        console.error(\"Failed to update data\");\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  }\n\n  function openEditModal(rowData) {\n    setRowDataToEdit(rowData); // Set the data of the row being edited\n\n    setIsEditModalOpen(true);\n  }\n\n  function closeEditModal() {\n    setIsEditModalOpen(false);\n  }\n\n  function openDeleteModal(user) {\n    setRowDataToEdit(user); // Set the data of the row being deleted\n\n    setIsDeleteModalOpen(true);\n  }\n\n  function closeDeleteModal() {\n    setIsDeleteModalOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, \"Course Master\"), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-4 flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search...\",\n    value: searchTerm,\n    onChange: handleSearchTermChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleImportButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, \"Import\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls, .csv\",\n    onChange: handleImportFile,\n    id: \"import-file\",\n    style: {\n      display: \"none\"\n    },\n    ref: fileInputRef // Associate ref with file input\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaDownload, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: addStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IoIosAddCircleOutline, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-t-1 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }, \"S no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, \"Course ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, \"Course Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, \"Course Type\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, filteredData.map((user, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  }, (pageTable2 - 1) * resultsPerPage + i + 1)), \" \", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 23\n    }\n  }, user.course_id)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }, user.course_name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 19\n    }\n  }, user.department)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 19\n    }\n  }, \"Semester \", user.semester)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 19\n    }\n  }, user.coursetype)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Edit\",\n    onClick: () => openEditModal(user) // Pass the row data to the edit modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable2,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isEditModalOpen,\n    onClose: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }, \"Course Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, rowDataToEdit && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  }, \"Course ID: \", rowDataToEdit.course_id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 15\n    }\n  }, \"Course Name: \", rowDataToEdit.course_name), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, \"Course Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"course_name\",\n    placeholder: \"Computer Architecture\",\n    value: editedData.course_name || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }, \"Course Faculty\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"course_faculty\",\n    placeholder: \"Poovarasan\",\n    value: editedData.course_faculty || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"department\",\n    placeholder: \"CSE\",\n    value: editedData.department || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"semester\",\n    placeholder: \"6\",\n    value: editedData.semester || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }\n  }, \"Course Type\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"coursetype\",\n    placeholder: \"Coresubject\",\n    value: editedData.coursetype || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }\n  }, \"Accept\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isAddStudentModalOpen,\n    onClose: closeaddStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 9\n    }\n  }, \"Add Course Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 15\n    }\n  }, \"Course ID\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"course_id\",\n    className: \"mt-1\",\n    placeholder: \"18CS202\",\n    value: courseId,\n    onChange: handleCourseIdChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 15\n    }\n  }, \"Course Name\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"course_name\",\n    className: \"mt-1\",\n    placeholder: \"Physics\",\n    value: courseName,\n    onChange: handleCourseNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 15\n    }\n  }, \"Course Faculty\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"course_faculty\",\n    className: \"mt-1\",\n    placeholder: \"Sathish P\",\n    value: courseFaculty,\n    onChange: handleCourseFacultyChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"department\",\n    className: \"mt-1\",\n    placeholder: \"CSE\",\n    value: department,\n    onChange: handleDepartmentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 15\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"semester\",\n    className: \"mt-1\",\n    placeholder: \"6\",\n    value: semester,\n    onChange: handleSemesterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 15\n    }\n  }, \"Course Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"mt-1\",\n    value: selectedCourseType,\n    onChange: handleCourseTypeChange,\n    name: \"coursetype\" // Add name attribute to the Select component\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 19\n    }\n  }, \"Select Course\"), coursetype.map((course, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }, course))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeaddStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleformsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 13\n    }\n  }, \"Add Student\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/courseMaster.js"],"names":["React","useState","useEffect","useRef","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Badge","Button","Pagination","Input","IoIosAddCircleOutline","FaDownload","EditIcon","TrashIcon","PageTitle","XLSX","Modal","ModalHeader","ModalBody","ModalFooter","Label","Select","coursetype","Tables","dataTable2","setDataTable2","filteredData","setFilteredData","searchTerm","setSearchTerm","selectedAttribute","setSelectedAttribute","filterValue","setFilterValue","isEditModalOpen","setIsEditModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","rowDataToEdit","setRowDataToEdit","editedData","setEditedData","isAddStudentModalOpen","setAddStudentModalOpen","selectedCourseType","setSelectedCourseType","courseId","setCourseId","courseName","setCourseName","courseFaculty","setCourseFaculty","department","setDepartment","semester","setSemester","resultsPerPage","totalResults","length","pageTable2","setPageTable2","fetchOverallCourseData","addStudentModalOpen","closeaddStudentModalOpen","handleCourseNameChange","e","target","value","handleCourseIdChange","handleCourseFacultyChange","handleDepartmentChange","handleSemesterChange","handleCourseTypeChange","console","log","handleformsubmit","apiUrl","error","newCourse","course_id","course_name","course_faculty","courseType","response","fetch","method","headers","body","JSON","stringify","ok","data","json","mappedData","courses","map","course","filter","user","toLowerCase","includes","String","startIndex","endIndex","slice","onPageChangeTable2","p","handleSearchTermChange","event","fileInputRef","handleImportButtonClick","current","click","handleImportFile","file","files","reader","FileReader","onload","fileName","name","fileExtension","split","pop","importedData","parseExcelData","result","parseCSVData","readAsBinaryString","excelData","workbook","read","type","sheetName","SheetNames","sheet","Sheets","utils","sheet_to_json","header","parsedData","row","rowData","forEach","index","csvData","rows","i","values","push","handleExportData","csvContent","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","revokeObjectURL","handleInputChange","prevData","handleUpdate","rowIndex","findIndex","updatedRowData","updatedDataTable","closeEditModal","updateDataInBackend","openEditModal","openDeleteModal","closeDeleteModal","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Badge,\r\n  Button,\r\n  Pagination,\r\n  Input,\r\n} from \"@windmill/react-ui\";\r\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\r\nimport { Label, Select } from \"@windmill/react-ui\";\r\n\r\nconst coursetype = [\r\n  \"CoreSubject\",\r\n  \"Elective Course\",\r\n  \"Open Elective Course\",\r\n  \"Addon Course\",\r\n  \"Honours Course\",\r\n  \"Minors Course\",\r\n];\r\n\r\nfunction Tables() {\r\n  const [dataTable2, setDataTable2] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedAttribute, setSelectedAttribute] = useState(\"\"); // State to hold selected attribute\r\n  const [filterValue, setFilterValue] = useState(\"\"); //\r\n  \r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\r\n  const [editedData, setEditedData] = useState({}); // State\r\n  const [isAddStudentModalOpen, setAddStudentModalOpen] = useState(false);\r\n  const [selectedCourseType, setSelectedCourseType] = useState(\"\");\r\n  const [courseId, setCourseId] = useState(\"\");\r\n  const [courseName, setCourseName] = useState(\"\");\r\n  const [courseFaculty, setCourseFaculty] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [semester, setSemester] = useState(\"\");\r\n\r\n  const resultsPerPage = 8;\r\n  const totalResults = dataTable2.length;\r\n\r\n  const [pageTable2, setPageTable2] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchOverallCourseData();\r\n  }, []);\r\n  \r\n  function addStudentModalOpen() {\r\n    setAddStudentModalOpen(true);\r\n  }\r\n  function closeaddStudentModalOpen() {\r\n    setAddStudentModalOpen(false);\r\n  }\r\n  const handleCourseNameChange = (e) => {\r\n    setCourseName(e.target.value);\r\n  };\r\n  const handleCourseIdChange = (e) => {\r\n    setCourseId(e.target.value);\r\n  };\r\n  const handleCourseFacultyChange = (e) => {\r\n    setCourseFaculty(e.target.value);\r\n  };\r\n  const handleDepartmentChange = (e) => {\r\n    setDepartment(e.target.value);\r\n  };\r\n  const handleSemesterChange = (e) => {\r\n    setSemester(e.target.value);\r\n  };\r\n  const handleCourseTypeChange = (e) => {\r\n    setSelectedCourseType(e.target.value);\r\n  };\r\n  console.log(selectedCourseType);\r\n  const handleformsubmit = async () => {\r\n    try {\r\n      let apiUrl;\r\n      // Determine the API endpoint based on the selected course type\r\n      if (selectedCourseType == \"CoreSubject\") {\r\n        apiUrl = \"http://localhost:5555/addcoresubject\";\r\n      } else if (selectedCourseType == \"Elective Course\") {\r\n        apiUrl = \"http://localhost:5555/addelectivesubject\";\r\n      } else if (selectedCourseType == \"Open Elective Course\") {\r\n        apiUrl = \"http://localhost:5555/addopenelectivesubject\";\r\n      } else if (selectedCourseType == \"Addon Course\") {\r\n        apiUrl = \"http://localhost:5555/addonCourseSubject\";\r\n      } else if (selectedCourseType == \"Honours Course\") {\r\n        apiUrl = \"http://localhost:5555/AddHonours\";\r\n      } else if (selectedCourseType == \"Minors Course\") {\r\n        apiUrl = \"http://localhost:5555/AddMinours\";\r\n      } else {\r\n        console.error(\"Invalid course type\");\r\n        return;\r\n      }\r\n\r\n      const newCourse = {\r\n        course_id: courseId,\r\n        course_name: courseName,\r\n        course_faculty: courseFaculty,\r\n        department: department,\r\n        semester: semester,\r\n        courseType: selectedCourseType,\r\n      };\r\n      console.log(newCourse);\r\n      const response = await fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify([newCourse]), // Passing an array containing newCourse\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Form Data sent successfully\");\r\n        closeaddStudentModalOpen();\r\n      } else {\r\n        console.error(\"Failed to send form data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending form data:\", error);\r\n    }\r\n  };\r\n\r\n  async function fetchOverallCourseData() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5555/coursemaster\");\r\n      const data = await response.json();\r\n      const mappedData = data.courses.map((course) => ({\r\n        course_id: course.course_id,\r\n        course_name: course.course_name,\r\n        course_faculty: course.course_faculty,\r\n        department: course.department,\r\n        semester: course.semester,\r\n        coursetype: course.coursetype,\r\n      }));\r\n\r\n      setDataTable2(mappedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.course_id &&\r\n            user.course_id.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.course_name &&\r\n            user.course_name\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase())) ||\r\n          (user.course_faculty &&\r\n            user.course_faculty\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (String(user.semester) && // Ensure semester is treated as a string\r\n            String(user.semester)\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase())) ||\r\n          (user.coursetype &&\r\n            user.coursetype.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  useEffect(() => {\r\n    const startIndex = (pageTable2 - 1) * resultsPerPage;\r\n    const endIndex = startIndex + resultsPerPage;\r\n    setFilteredData(dataTable2.slice(startIndex, endIndex));\r\n  }, [pageTable2, dataTable2]);\r\n\r\n  function onPageChangeTable2(p) {\r\n    setPageTable2(p);\r\n  }\r\n\r\n  function handleSearchTermChange(event) {\r\n    setSearchTerm(event.target.value);\r\n  }\r\n\r\n  const fileInputRef = useRef(null); // Ref for file input element\r\n\r\n  function handleImportButtonClick() {\r\n    fileInputRef.current.click(); // Simulate click on file input\r\n  }\r\n\r\n  function handleImportFile(event) {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileName = file.name;\r\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\r\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\r\n        try {\r\n          const importedData = parseExcelData(event.target.result);\r\n          console.log(\"Imported Excel data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing Excel data:\", error);\r\n        }\r\n      } else if (fileExtension === \"csv\") {\r\n        try {\r\n          const importedData = parseCSVData(event.target.result);\r\n          console.log(\"Imported CSV data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing CSV data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Unsupported file format\");\r\n      }\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  function parseExcelData(excelData) {\r\n    const workbook = XLSX.read(excelData, { type: \"binary\" });\r\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\r\n    const sheet = workbook.Sheets[sheetName];\r\n    // Convert the sheet data into an array of objects\r\n    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n    // Assuming the first row contains headers\r\n    const headers = data[0];\r\n    // Start from the second row to parse data\r\n    const parsedData = data.slice(1).map((row) => {\r\n      const rowData = {};\r\n      row.forEach((value, index) => {\r\n        rowData[headers[index]] = value;\r\n      });\r\n      return rowData;\r\n    });\r\n    console.log(parsedData);\r\n    return parsedData;\r\n  }\r\n\r\n  function parseCSVData(csvData) {\r\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\r\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\r\n    const parsedData = [];\r\n    // Start from the second row to parse data\r\n    for (let i = 1; i < rows.length; i++) {\r\n      const rowData = {};\r\n      const values = rows[i].split(\",\");\r\n      // Assign each value to its corresponding header\r\n      headers.forEach((header, index) => {\r\n        rowData[header] = values[index];\r\n      });\r\n      parsedData.push(rowData);\r\n    }\r\n    return parsedData;\r\n  }\r\n\r\n  function handleExportData() {\r\n    let csvContent =\r\n      \"Course ID,Course Name,Course Faculty Name,Department,Semester,Coursetype\\n\";\r\n    dataTable2.forEach((user) => {\r\n      if (\r\n        user.course_id &&\r\n        user.course_name &&\r\n        user.course_faculty &&\r\n        user.department &&\r\n        user.semester &&\r\n        user.coursetype\r\n      ) {\r\n        csvContent += `${user.course_id},${user.course_name},${user.course_faculty},${user.department},${user.semester},${user.coursetype}\\n`;\r\n      }\r\n    });\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"course_details.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  async function handleUpdate() {\r\n    const rowIndex = dataTable2.findIndex(\r\n      (row) => row.course_id === rowDataToEdit.course_id\r\n    ); // Assuming course_id is the unique identifier\r\n    if (rowIndex !== -1) {\r\n      const updatedRowData = { ...dataTable2[rowIndex], ...editedData };\r\n      const updatedDataTable = [...dataTable2];\r\n      updatedDataTable[rowIndex] = updatedRowData;\r\n      setDataTable2(updatedDataTable);\r\n      closeEditModal();\r\n      let apiUrl;\r\n      if (updatedRowData.coursetype === \"Coresubject\") {\r\n        apiUrl = \"http://localhost:5555/editcoresubject\";\r\n      } else if (updatedRowData.coursetype === \"Addon Course\") {\r\n        apiUrl = \"http://localhost:5555/editaddoncourse\";\r\n      } else if (updatedRowData.coursetype === \"Elective Course\") {\r\n        apiUrl = \"http://localhost:5555/editelective\";\r\n      } else if (updatedRowData.coursetype === \"Openelective Course\") {\r\n        apiUrl = \"http://localhost:5555/editopenelective\";\r\n      } else if (updatedRowData.coursetype === \"Honours Course\") {\r\n        apiUrl = \"http://localhost:5555/edithonours\";\r\n      } else {\r\n        apiUrl = \"http://localhost:5555/editminours\";\r\n      }\r\n      updateDataInBackend(updatedRowData, apiUrl);\r\n    }\r\n  }\r\n\r\n  async function updateDataInBackend(updatedRowData, apiUrl) {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/${updatedRowData.course_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedRowData),\r\n      });\r\n      if (response.ok) {\r\n        console.log(\"Data updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to update data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  }\r\n\r\n  function openEditModal(rowData) {\r\n    setRowDataToEdit(rowData); // Set the data of the row being edited\r\n    setIsEditModalOpen(true);\r\n  }\r\n\r\n  function closeEditModal() {\r\n    setIsEditModalOpen(false);\r\n  }\r\n\r\n  function openDeleteModal(user) {\r\n    setRowDataToEdit(user); // Set the data of the row being deleted\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  function closeDeleteModal() {\r\n    setIsDeleteModalOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Course Master</PageTitle>\r\n\r\n      <TableContainer className=\"mb-8\">\r\n        <div className=\"m-4 flex justify-between items-center\">\r\n          <div className=\"flex justify-start items-center\">\r\n            <Input\r\n              placeholder=\"Search...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchTermChange}\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end items-center\">\r\n            <Button onClick={handleImportButtonClick}>Import</Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx, .xls, .csv\"\r\n              onChange={handleImportFile}\r\n              id=\"import-file\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef} // Associate ref with file input\r\n            />\r\n\r\n            {/* Add a gap between import and download button */}\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={handleExportData}>\r\n              <FaDownload className=\"w-5 h-5\" />\r\n            </Button>\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={addStudentModalOpen}>\r\n              <IoIosAddCircleOutline className=\"w-5 h-5\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr className=\"border-t-1 w-full\" />\r\n\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>S no</TableCell>\r\n              <TableCell>Course ID</TableCell>\r\n              <TableCell>Course Name</TableCell>\r\n              <TableCell>Department</TableCell>\r\n              <TableCell>Semester</TableCell>\r\n              <TableCell>Course Type</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredData.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <span className=\"text-sm\">\r\n                    {(pageTable2 - 1) * resultsPerPage + i + 1}\r\n                  </span>\r\n                </TableCell>{\" \"}\r\n                {/* Calculate S.no */}\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.course_id}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.course_name}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.department}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">Semester {user.semester}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.coursetype}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Edit\"\r\n                      onClick={() => openEditModal(user)} // Pass the row data to the edit modal\r\n                    >\r\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                    {/* <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Delete\"\r\n                      onClick={() => openDeleteModal(user)} // Pass the row data to the delete modal\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button> */}\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable2}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n      <div></div>\r\n      <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n        <ModalHeader>Course Details</ModalHeader>\r\n        <ModalBody>\r\n          {rowDataToEdit && (\r\n            <>\r\n              <p>Course ID: {rowDataToEdit.course_id}</p>\r\n              <p>Course Name: {rowDataToEdit.course_name}</p>\r\n              <Label className=\"mt-4\">\r\n                <span>Course Name</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"course_name\"\r\n                  placeholder=\"Computer Architecture\"\r\n                  value={editedData.course_name || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Course Faculty</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"course_faculty\"\r\n                  placeholder=\"Poovarasan\"\r\n                  value={editedData.course_faculty || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Department</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"department\"\r\n                  placeholder=\"CSE\"\r\n                  value={editedData.department || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Semester</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"semester\"\r\n                  placeholder=\"6\"\r\n                  value={editedData.semester || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Course Type</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"coursetype\"\r\n                  placeholder=\"Coresubject\"\r\n                  value={editedData.coursetype || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              {/* Add input fields for editing */}\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeEditModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleUpdate}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {/* <Modal isOpen={isDeleteModalOpen} onClose={closeDeleteModal}>\r\n        <ModalHeader>Course Deletion</ModalHeader>\r\n        <ModalBody>Your Deleting Course Data</ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeDeleteModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleDelete}>Delete</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeDeleteModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal> */}\r\n      <Modal isOpen={isAddStudentModalOpen} onClose={closeaddStudentModalOpen}>\r\n        <ModalHeader>Add Course Details</ModalHeader>\r\n        <ModalBody>\r\n          <>\r\n            <Label className=\"mt-4\">\r\n              <span>Course ID</span>\r\n              <Input\r\n                name=\"course_id\"\r\n                className=\"mt-1\"\r\n                placeholder=\"18CS202\"\r\n                value={courseId}\r\n                onChange={handleCourseIdChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Course Name</span>\r\n              <Input\r\n                name=\"course_name\"\r\n                className=\"mt-1\"\r\n                placeholder=\"Physics\"\r\n                value={courseName}\r\n                onChange={handleCourseNameChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Course Faculty</span>\r\n              <Input\r\n                name=\"course_faculty\"\r\n                className=\"mt-1\"\r\n                placeholder=\"Sathish P\"\r\n                value={courseFaculty}\r\n                onChange={handleCourseFacultyChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Department</span>\r\n              <Input\r\n                name=\"department\"\r\n                className=\"mt-1\"\r\n                placeholder=\"CSE\"\r\n                value={department}\r\n                onChange={handleDepartmentChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Semester</span>\r\n              <Input\r\n                name=\"semester\"\r\n                className=\"mt-1\"\r\n                placeholder=\"6\"\r\n                value={semester}\r\n                onChange={handleSemesterChange}\r\n              />\r\n            </Label>\r\n            <div className=\"mt-4\">\r\n              <Label>Course Type</Label>\r\n              <div className=\"mt-2\">\r\n                <Select\r\n                  className=\"mt-1\"\r\n                  value={selectedCourseType}\r\n                  onChange={handleCourseTypeChange}\r\n                  name=\"coursetype\" // Add name attribute to the Select component\r\n                >\r\n                  <option value=\"\">Select Course</option>\r\n                  {coursetype.map((course, index) => (\r\n                    <option key={index} value={course}>\r\n                      {course}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          </>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeaddStudentModalOpen}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleformsubmit}>Add Student</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}