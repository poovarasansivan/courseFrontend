{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack2025\\\\courseRgeistration\\\\src\\\\pages\\\\courseMaster.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Badge, Button, Pagination, Input } from \"@windmill/react-ui\";\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\nimport { FaDownload } from \"react-icons/fa6\";\nimport { EditIcon, TrashIcon } from \"../icons\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport * as XLSX from \"xlsx\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { Label } from \"@windmill/react-ui\";\n\nfunction Tables() {\n  const [dataTable2, setDataTable2] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\n\n  const [editedData, setEditedData] = useState({}); // State\n\n  const [isAddStudentModalOpen, setAddStudentModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    rollno: \"\",\n    name: \"\",\n    email: \"\",\n    department: \"\",\n    batch: \"\"\n  });\n  const resultsPerPage = 8;\n  const totalResults = dataTable2.length;\n  const [pageTable2, setPageTable2] = useState(1);\n  useEffect(() => {\n    fetchOverallStudentData();\n  }, []);\n\n  function addStudentModalOpen() {\n    setAddStudentModalOpen(true);\n  }\n\n  function closeaddStudentModalOpen() {\n    setAddStudentModalOpen(false);\n  }\n\n  const handleformsubmit = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5555/adduser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        console.log(\"Form Data sent successfully\");\n        closeaddStudentModalOpen();\n      } else {\n        console.error(\"Failed to send form data\");\n      }\n    } catch (error) {\n      console.error(\"Error sending form data:\", error);\n    }\n  };\n\n  async function fetchOverallStudentData() {\n    try {\n      const response = await fetch(\"http://localhost:5555/getdata\");\n      const data = await response.json();\n      const mappedData = data.map(student => ({\n        rollno: student.rollno,\n        name: student.name,\n        email: student.email,\n        department: student.department,\n        batch: student.batch\n      }));\n      setDataTable2(mappedData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  useEffect(() => {\n    setFilteredData(dataTable2.filter(user => user.rollno && user.rollno.toLowerCase().includes(searchTerm.toLowerCase()) || user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()) || user.department && user.department.toLowerCase().includes(searchTerm.toLowerCase()) || user.batch && user.batch.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, dataTable2]);\n  useEffect(() => {\n    const startIndex = (pageTable2 - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    setFilteredData(dataTable2.slice(startIndex, endIndex));\n  }, [pageTable2, dataTable2]);\n\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  }\n\n  function handleSearchTermChange(event) {\n    setSearchTerm(event.target.value);\n  }\n\n  const fileInputRef = useRef(null); // Ref for file input element\n\n  function handleImportButtonClick() {\n    fileInputRef.current.click(); // Simulate click on file input\n  }\n\n  function handleImportFile(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      const fileName = file.name;\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\n\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\n        try {\n          const importedData = parseExcelData(event.target.result);\n          console.log(\"Imported Excel data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing Excel data:\", error);\n        }\n      } else if (fileExtension === \"csv\") {\n        try {\n          const importedData = parseCSVData(event.target.result);\n          console.log(\"Imported CSV data:\", importedData);\n          setDataTable2(importedData);\n        } catch (error) {\n          console.error(\"Error parsing CSV data:\", error);\n        }\n      } else {\n        console.error(\"Unsupported file format\");\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  }\n\n  function parseExcelData(excelData) {\n    const workbook = XLSX.read(excelData, {\n      type: \"binary\"\n    });\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\n\n    const sheet = workbook.Sheets[sheetName]; // Convert the sheet data into an array of objects\n\n    const data = XLSX.utils.sheet_to_json(sheet, {\n      header: 1\n    }); // Assuming the first row contains headers\n\n    const headers = data[0]; // Start from the second row to parse data\n\n    const parsedData = data.slice(1).map(row => {\n      const rowData = {};\n      row.forEach((value, index) => {\n        rowData[headers[index]] = value;\n      });\n      return rowData;\n    });\n    console.log(parsedData);\n    return parsedData;\n  }\n\n  function parseCSVData(csvData) {\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\n\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\n\n    const parsedData = []; // Start from the second row to parse data\n\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = {};\n      const values = rows[i].split(\",\"); // Assign each value to its corresponding header\n\n      headers.forEach((header, index) => {\n        rowData[header] = values[index];\n      });\n      parsedData.push(rowData);\n    }\n\n    return parsedData;\n  }\n\n  function handleExportData() {\n    let csvContent = \"Roll no,Name,Email,Department,Batch\\n\";\n    dataTable2.forEach(user => {\n      if (user.rollno && user.name && user.email && user.department && user.batch) {\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.batch}\\n`;\n      }\n    });\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"student_details.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  }\n\n  function handleInputAddChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  }\n\n  function handleUpdate() {\n    // Find the index of the row to be updated\n    const rowIndex = dataTable2.findIndex(row => row.rollno === rowDataToEdit.rollno);\n\n    if (rowIndex !== -1) {\n      // Update the row data with edited values\n      const updatedRowData = { ...dataTable2[rowIndex],\n        ...editedData\n      };\n      const updatedDataTable = [...dataTable2];\n      updatedDataTable[rowIndex] = updatedRowData;\n      setDataTable2(updatedDataTable); // Close the modal after updating\n\n      closeEditModal(); // Send the updated data to the backend\n\n      updateDataInBackend(updatedRowData);\n    }\n  }\n\n  async function updateDataInBackend(updatedRowData) {\n    try {\n      const response = await fetch(`http://localhost:5555/userupdate/${updatedRowData.rollno}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedRowData)\n      });\n\n      if (response.ok) {\n        console.log(\"Data updated successfully\");\n      } else {\n        console.error(\"Failed to update data\");\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  }\n\n  async function handleDelete() {\n    try {\n      const response = await fetch(`http://localhost:5555/deleteuser/${rowDataToEdit.rollno}`, {\n        method: \"DELETE\"\n      });\n\n      if (response.ok) {\n        console.log(\"Data deleted successfully\");\n        const updatedDataTable = dataTable2.filter(row => row.rollno !== rowDataToEdit.rollno);\n        setDataTable2(updatedDataTable);\n        closeDeleteModal(); // Close the modal after deletion\n      } else {\n        console.error(\"Failed to delete data\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n    }\n  }\n\n  function openEditModal(rowData) {\n    setRowDataToEdit(rowData); // Set the data of the row being edited\n\n    setIsEditModalOpen(true);\n  }\n\n  function closeEditModal() {\n    setIsEditModalOpen(false);\n  }\n\n  function openDeleteModal(user) {\n    setRowDataToEdit(user); // Set the data of the row being deleted\n\n    setIsDeleteModalOpen(true);\n  }\n\n  function closeDeleteModal() {\n    setIsDeleteModalOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, \"Course Master\"), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-4 flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search...\",\n    value: searchTerm,\n    onChange: handleSearchTermChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleImportButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, \"Import\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls, .csv\",\n    onChange: handleImportFile,\n    id: \"import-file\",\n    style: {\n      display: \"none\"\n    },\n    ref: fileInputRef // Associate ref with file input\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleExportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaDownload, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: addStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IoIosAddCircleOutline, {\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-t-1 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, \"S no\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }, \"Course ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, \"Batch\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, filteredData.map((user, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 19\n    }\n  }, (pageTable2 - 1) * resultsPerPage + i + 1)), \" \", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 23\n    }\n  }, user.rollno)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 19\n    }\n  }, user.email)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, user.department)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, user.batch)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 19\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Edit\",\n    onClick: () => openEditModal(user) // Pass the row data to the edit modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Delete\",\n    onClick: () => openDeleteModal(user) // Pass the row data to the delete modal\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable2,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isEditModalOpen,\n    onClose: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, \"Student Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }\n  }, rowDataToEdit && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.rollno), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.department), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, rowDataToEdit.batch), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"name\",\n    placeholder: \"Poovarasan\",\n    value: editedData.name || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"email\",\n    placeholder: \"poovarasan@bitsathy\",\n    value: editedData.email || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    name: \"department\",\n    placeholder: \"CSE\",\n    value: editedData.department || \"\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, \"Accept\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isDeleteModalOpen,\n    onClose: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }\n  }, \"Student Deletion\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }\n  }, \"Your Deleting student Data\"), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  }, \"Delete\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isAddStudentModalOpen,\n    onClose: closeaddStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 9\n    }\n  }, \"Add Student Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 15\n    }\n  }, \"Roll No\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"rollno\",\n    className: \"mt-1\",\n    placeholder: \"7376211CS239\",\n    value: formData.rollno,\n    onChange: handleInputAddChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    className: \"mt-1\",\n    placeholder: \"Poovarasan\",\n    value: formData.name,\n    onChange: handleInputAddChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    className: \"mt-1\",\n    placeholder: \"abc@bitsathy.ac.in\",\n    value: formData.email,\n    onChange: handleInputAddChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 15\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"department\",\n    className: \"mt-1\",\n    placeholder: \"CSE\",\n    value: formData.department,\n    onChange: handleInputAddChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 15\n    }\n  }, \"Batch\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"batch\",\n    className: \"mt-1\",\n    placeholder: \"2025\",\n    value: formData.batch,\n    onChange: handleInputAddChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 15\n    }\n  })), \" \")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeaddStudentModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleformsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 13\n    }\n  }, \"Add Student\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["D:/fullstack2025/courseRgeistration/src/pages/courseMaster.js"],"names":["React","useState","useEffect","useRef","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Badge","Button","Pagination","Input","IoIosAddCircleOutline","FaDownload","EditIcon","TrashIcon","PageTitle","XLSX","Modal","ModalHeader","ModalBody","ModalFooter","Label","Tables","dataTable2","setDataTable2","filteredData","setFilteredData","searchTerm","setSearchTerm","isEditModalOpen","setIsEditModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","rowDataToEdit","setRowDataToEdit","editedData","setEditedData","isAddStudentModalOpen","setAddStudentModalOpen","formData","setFormData","rollno","name","email","department","batch","resultsPerPage","totalResults","length","pageTable2","setPageTable2","fetchOverallStudentData","addStudentModalOpen","closeaddStudentModalOpen","handleformsubmit","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","data","json","mappedData","map","student","filter","user","toLowerCase","includes","startIndex","endIndex","slice","onPageChangeTable2","p","handleSearchTermChange","event","target","value","fileInputRef","handleImportButtonClick","current","click","handleImportFile","file","files","reader","FileReader","onload","fileName","fileExtension","split","pop","importedData","parseExcelData","result","parseCSVData","readAsBinaryString","excelData","workbook","read","type","sheetName","SheetNames","sheet","Sheets","utils","sheet_to_json","header","parsedData","row","rowData","forEach","index","csvData","rows","i","values","push","handleExportData","csvContent","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","revokeObjectURL","handleInputChange","prevData","handleInputAddChange","prevFormData","handleUpdate","rowIndex","findIndex","updatedRowData","updatedDataTable","closeEditModal","updateDataInBackend","handleDelete","closeDeleteModal","openEditModal","openDeleteModal","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,WANF,EAOEC,cAPF,EAQEC,KARF,EASEC,MATF,EAUEC,UAVF,EAWEC,KAXF,QAYO,oBAZP;AAaA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,UAApC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA2D,oBAA3D;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgC,eAAD,EAAkBC,kBAAlB,IAAwCjC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACkC,iBAAD,EAAoBC,oBAApB,IAA4CnC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACoC,aAAD,EAAgBC,gBAAhB,IAAoCrC,QAAQ,CAAC,IAAD,CAAlD,CANgB,CAM0C;;AAC1D,QAAM,CAACsC,UAAD,EAAaC,aAAb,IAA8BvC,QAAQ,CAAC,EAAD,CAA5C,CAPgB,CAOkC;;AAClD,QAAM,CAACwC,qBAAD,EAAwBC,sBAAxB,IAAkDzC,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAAC0C,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC;AACvC4C,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,KAAK,EAAE,EAHgC;AAIvCC,IAAAA,UAAU,EAAE,EAJ2B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,QAAMC,cAAc,GAAG,CAAvB;AACA,QAAMC,YAAY,GAAGxB,UAAU,CAACyB,MAAhC;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrD,QAAQ,CAAC,CAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqD,IAAAA,uBAAuB;AACxB,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASC,mBAAT,GAA+B;AAC7Bd,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AACD,WAASe,wBAAT,GAAoC;AAClCf,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;;AAED,QAAMgB,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC5DC,QAAAA,MAAM,EAAE,MADoD;AAE5DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFmD;AAK5DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,QAAf;AALsD,OAAlC,CAA5B;;AAOA,UAAIgB,QAAQ,CAACO,EAAb,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAX,QAAAA,wBAAwB;AACzB,OAHD,MAGO;AACLU,QAAAA,OAAO,CAACE,KAAR,CAAc,0BAAd;AACD;AACF,KAdD,CAcE,OAAOA,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF,GAlBD;;AAoBA,iBAAed,uBAAf,GAAyC;AACvC,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,YAAMU,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACA,YAAMC,UAAU,GAAGF,IAAI,CAACG,GAAL,CAAUC,OAAD,KAAc;AACxC7B,QAAAA,MAAM,EAAE6B,OAAO,CAAC7B,MADwB;AAExCC,QAAAA,IAAI,EAAE4B,OAAO,CAAC5B,IAF0B;AAGxCC,QAAAA,KAAK,EAAE2B,OAAO,CAAC3B,KAHyB;AAIxCC,QAAAA,UAAU,EAAE0B,OAAO,CAAC1B,UAJoB;AAKxCC,QAAAA,KAAK,EAAEyB,OAAO,CAACzB;AALyB,OAAd,CAAT,CAAnB;AAOArB,MAAAA,aAAa,CAAC4C,UAAD,CAAb;AACD,KAXD,CAWE,OAAOH,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF;;AAEDnE,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,eAAe,CACbH,UAAU,CAACgD,MAAX,CACGC,IAAD,IACGA,IAAI,CAAC/B,MAAL,IACC+B,IAAI,CAAC/B,MAAL,CAAYgC,WAAZ,GAA0BC,QAA1B,CAAmC/C,UAAU,CAAC8C,WAAX,EAAnC,CADF,IAECD,IAAI,CAAC9B,IAAL,IACC8B,IAAI,CAAC9B,IAAL,CAAU+B,WAAV,GAAwBC,QAAxB,CAAiC/C,UAAU,CAAC8C,WAAX,EAAjC,CAHF,IAICD,IAAI,CAAC7B,KAAL,IACC6B,IAAI,CAAC7B,KAAL,CAAW8B,WAAX,GAAyBC,QAAzB,CAAkC/C,UAAU,CAAC8C,WAAX,EAAlC,CALF,IAMCD,IAAI,CAAC5B,UAAL,IACC4B,IAAI,CAAC5B,UAAL,CAAgB6B,WAAhB,GAA8BC,QAA9B,CAAuC/C,UAAU,CAAC8C,WAAX,EAAvC,CAPF,IAQCD,IAAI,CAAC3B,KAAL,IACC2B,IAAI,CAAC3B,KAAL,CAAW4B,WAAX,GAAyBC,QAAzB,CAAkC/C,UAAU,CAAC8C,WAAX,EAAlC,CAXN,CADa,CAAf;AAeD,GAhBQ,EAgBN,CAAC9C,UAAD,EAAaJ,UAAb,CAhBM,CAAT;AAkBAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6E,UAAU,GAAG,CAAC1B,UAAU,GAAG,CAAd,IAAmBH,cAAtC;AACA,UAAM8B,QAAQ,GAAGD,UAAU,GAAG7B,cAA9B;AACApB,IAAAA,eAAe,CAACH,UAAU,CAACsD,KAAX,CAAiBF,UAAjB,EAA6BC,QAA7B,CAAD,CAAf;AACD,GAJQ,EAIN,CAAC3B,UAAD,EAAa1B,UAAb,CAJM,CAAT;;AAMA,WAASuD,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B7B,IAAAA,aAAa,CAAC6B,CAAD,CAAb;AACD;;AAED,WAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrCrD,IAAAA,aAAa,CAACqD,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD;;AAED,QAAMC,YAAY,GAAGrF,MAAM,CAAC,IAAD,CAA3B,CArGgB,CAqGmB;;AAEnC,WAASsF,uBAAT,GAAmC;AACjCD,IAAAA,YAAY,CAACE,OAAb,CAAqBC,KAArB,GADiC,CACH;AAC/B;;AAED,WAASC,gBAAT,CAA0BP,KAA1B,EAAiC;AAC/B,UAAMQ,IAAI,GAAGR,KAAK,CAACC,MAAN,CAAaQ,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBZ,KAAD,IAAW;AACzB,YAAMa,QAAQ,GAAGL,IAAI,CAAC/C,IAAtB;AACA,YAAMqD,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,GAApB,GAA0BxB,WAA1B,EAAtB;;AACA,UAAIsB,aAAa,KAAK,MAAlB,IAA4BA,aAAa,KAAK,KAAlD,EAAyD;AACvD,YAAI;AACF,gBAAMG,YAAY,GAAGC,cAAc,CAAClB,KAAK,CAACC,MAAN,CAAakB,MAAd,CAAnC;AACArC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCkC,YAApC;AACA1E,UAAAA,aAAa,CAAC0E,YAAD,CAAb;AACD,SAJD,CAIE,OAAOjC,KAAP,EAAc;AACdF,UAAAA,OAAO,CAACE,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,OARD,MAQO,IAAI8B,aAAa,KAAK,KAAtB,EAA6B;AAClC,YAAI;AACF,gBAAMG,YAAY,GAAGG,YAAY,CAACpB,KAAK,CAACC,MAAN,CAAakB,MAAd,CAAjC;AACArC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCkC,YAAlC;AACA1E,UAAAA,aAAa,CAAC0E,YAAD,CAAb;AACD,SAJD,CAIE,OAAOjC,KAAP,EAAc;AACdF,UAAAA,OAAO,CAACE,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD;AACF,OARM,MAQA;AACLF,QAAAA,OAAO,CAACE,KAAR,CAAc,yBAAd;AACD;AACF,KAtBD;;AAuBA0B,IAAAA,MAAM,CAACW,kBAAP,CAA0Bb,IAA1B;AACD;;AAED,WAASU,cAAT,CAAwBI,SAAxB,EAAmC;AACjC,UAAMC,QAAQ,GAAGxF,IAAI,CAACyF,IAAL,CAAUF,SAAV,EAAqB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAArB,CAAjB;AACA,UAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAlB,CAFiC,CAES;;AAC1C,UAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAgBH,SAAhB,CAAd,CAHiC,CAIjC;;AACA,UAAMzC,IAAI,GAAGlD,IAAI,CAAC+F,KAAL,CAAWC,aAAX,CAAyBH,KAAzB,EAAgC;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAhC,CAAb,CALiC,CAMjC;;AACA,UAAMvD,OAAO,GAAGQ,IAAI,CAAC,CAAD,CAApB,CAPiC,CAQjC;;AACA,UAAMgD,UAAU,GAAGhD,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcR,GAAd,CAAmB8C,GAAD,IAAS;AAC5C,YAAMC,OAAO,GAAG,EAAhB;AACAD,MAAAA,GAAG,CAACE,OAAJ,CAAY,CAAClC,KAAD,EAAQmC,KAAR,KAAkB;AAC5BF,QAAAA,OAAO,CAAC1D,OAAO,CAAC4D,KAAD,CAAR,CAAP,GAA0BnC,KAA1B;AACD,OAFD;AAGA,aAAOiC,OAAP;AACD,KANkB,CAAnB;AAOArD,IAAAA,OAAO,CAACC,GAAR,CAAYkD,UAAZ;AACA,WAAOA,UAAP;AACD;;AAED,WAASb,YAAT,CAAsBkB,OAAtB,EAA+B;AAC7B,UAAMC,IAAI,GAAGD,OAAO,CAACvB,KAAR,CAAc,IAAd,CAAb,CAD6B,CACK;;AAClC,UAAMtC,OAAO,GAAG8D,IAAI,CAAC,CAAD,CAAJ,CAAQxB,KAAR,CAAc,GAAd,CAAhB,CAF6B,CAEO;;AACpC,UAAMkB,UAAU,GAAG,EAAnB,CAH6B,CAI7B;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACxE,MAAzB,EAAiCyE,CAAC,EAAlC,EAAsC;AACpC,YAAML,OAAO,GAAG,EAAhB;AACA,YAAMM,MAAM,GAAGF,IAAI,CAACC,CAAD,CAAJ,CAAQzB,KAAR,CAAc,GAAd,CAAf,CAFoC,CAGpC;;AACAtC,MAAAA,OAAO,CAAC2D,OAAR,CAAgB,CAACJ,MAAD,EAASK,KAAT,KAAmB;AACjCF,QAAAA,OAAO,CAACH,MAAD,CAAP,GAAkBS,MAAM,CAACJ,KAAD,CAAxB;AACD,OAFD;AAGAJ,MAAAA,UAAU,CAACS,IAAX,CAAgBP,OAAhB;AACD;;AACD,WAAOF,UAAP;AACD;;AAED,WAASU,gBAAT,GAA4B;AAC1B,QAAIC,UAAU,GAAG,uCAAjB;AACAtG,IAAAA,UAAU,CAAC8F,OAAX,CAAoB7C,IAAD,IAAU;AAC3B,UACEA,IAAI,CAAC/B,MAAL,IACA+B,IAAI,CAAC9B,IADL,IAEA8B,IAAI,CAAC7B,KAFL,IAGA6B,IAAI,CAAC5B,UAHL,IAIA4B,IAAI,CAAC3B,KALP,EAME;AACAgF,QAAAA,UAAU,IAAK,GAAErD,IAAI,CAAC/B,MAAO,IAAG+B,IAAI,CAAC9B,IAAK,IAAG8B,IAAI,CAAC7B,KAAM,IAAG6B,IAAI,CAAC5B,UAAW,IAAG4B,IAAI,CAAC3B,KAAM,IAAzF;AACD;AACF,KAVD;AAWA,UAAMiF,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,UAAD,CAAT,EAAuB;AAAEnB,MAAAA,IAAI,EAAE;AAAR,KAAvB,CAAb;AACA,UAAMsB,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAZ;AACA,UAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,IAAAA,CAAC,CAACG,IAAF,GAASN,GAAT;AACAG,IAAAA,CAAC,CAACI,QAAF,GAAa,qBAAb;AACAJ,IAAAA,CAAC,CAAC5C,KAAF;AACA0C,IAAAA,GAAG,CAACO,eAAJ,CAAoBR,GAApB;AACD;;AAED,WAASS,iBAAT,CAA2BxD,KAA3B,EAAkC;AAChC,UAAM;AAAEvC,MAAAA,IAAF;AAAQyC,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AACA9C,IAAAA,aAAa,CAAEsG,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3B,OAAChG,IAAD,GAAQyC;AAFmB,KAAf,CAAD,CAAb;AAID;;AACD,WAASwD,oBAAT,CAA8B1D,KAA9B,EAAqC;AACnC,UAAM;AAAEvC,MAAAA,IAAF;AAAQyC,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AACA1C,IAAAA,WAAW,CAAEoG,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAAClG,IAAD,GAAQyC;AAFqB,KAAnB,CAAD,CAAX;AAID;;AAED,WAAS0D,YAAT,GAAwB;AACtB;AACA,UAAMC,QAAQ,GAAGvH,UAAU,CAACwH,SAAX,CACd5B,GAAD,IAASA,GAAG,CAAC1E,MAAJ,KAAeR,aAAa,CAACQ,MADvB,CAAjB;;AAGA,QAAIqG,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB;AACA,YAAME,cAAc,GAAG,EAAE,GAAGzH,UAAU,CAACuH,QAAD,CAAf;AAA2B,WAAG3G;AAA9B,OAAvB;AACA,YAAM8G,gBAAgB,GAAG,CAAC,GAAG1H,UAAJ,CAAzB;AACA0H,MAAAA,gBAAgB,CAACH,QAAD,CAAhB,GAA6BE,cAA7B;AACAxH,MAAAA,aAAa,CAACyH,gBAAD,CAAb,CALmB,CAMnB;;AACAC,MAAAA,cAAc,GAPK,CAQnB;;AACAC,MAAAA,mBAAmB,CAACH,cAAD,CAAnB;AACD;AACF;;AAED,iBAAeG,mBAAf,CAAmCH,cAAnC,EAAmD;AACjD,QAAI;AACF,YAAMzF,QAAQ,GAAG,MAAMC,KAAK,CACzB,oCAAmCwF,cAAc,CAACvG,MAAO,EADhC,EAE1B;AACEgB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFX;AAKEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAemF,cAAf;AALR,OAF0B,CAA5B;;AAUA,UAAIzF,QAAQ,CAACO,EAAb,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACE,KAAR,CAAc,uBAAd;AACD;AACF,KAhBD,CAgBE,OAAOA,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF;;AAED,iBAAemF,YAAf,GAA8B;AAC5B,QAAI;AACF,YAAM7F,QAAQ,GAAG,MAAMC,KAAK,CACzB,oCAAmCvB,aAAa,CAACQ,MAAO,EAD/B,EAE1B;AACEgB,QAAAA,MAAM,EAAE;AADV,OAF0B,CAA5B;;AAMA,UAAIF,QAAQ,CAACO,EAAb,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,cAAMiF,gBAAgB,GAAG1H,UAAU,CAACgD,MAAX,CACtB4C,GAAD,IAASA,GAAG,CAAC1E,MAAJ,KAAeR,aAAa,CAACQ,MADf,CAAzB;AAGAjB,QAAAA,aAAa,CAACyH,gBAAD,CAAb;AACAI,QAAAA,gBAAgB,GAND,CAMK;AACrB,OAPD,MAOO;AACLtF,QAAAA,OAAO,CAACE,KAAR,CAAc,uBAAd;AACD;AACF,KAjBD,CAiBE,OAAOA,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF;;AAED,WAASqF,aAAT,CAAuBlC,OAAvB,EAAgC;AAC9BlF,IAAAA,gBAAgB,CAACkF,OAAD,CAAhB,CAD8B,CACH;;AAC3BtF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASoH,cAAT,GAA0B;AACxBpH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;;AAED,WAASyH,eAAT,CAAyB/E,IAAzB,EAA+B;AAC7BtC,IAAAA,gBAAgB,CAACsC,IAAD,CAAhB,CAD6B,CACL;;AACxBxC,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;;AAED,WAASqH,gBAAT,GAA4B;AAC1BrH,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;;AAED,sBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,KAAK,EAAEL,UAFT;AAGE,IAAA,QAAQ,EAAEqD,sBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAC,mBAFT;AAGE,IAAA,QAAQ,EAAEG,gBAHZ;AAIE,IAAA,EAAE,EAAC,aAJL;AAKE,IAAA,KAAK,EAAE;AAAEgE,MAAAA,OAAO,EAAE;AAAX,KALT;AAME,IAAA,GAAG,EAAEpE,YANP,CAMqB;AANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAYE;AAAK,IAAA,KAAK,EAAE;AAAEqE,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE7B,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,eAgBE;AAAK,IAAA,KAAK,EAAE;AAAE6B,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAErG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CARF,CADF,eA+BE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAiCE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF,CADF,eAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,YAAY,CAAC4C,GAAb,CAAiB,CAACG,IAAD,EAAOiD,CAAP,kBAChB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACxE,UAAU,GAAG,CAAd,IAAmBH,cAAnB,GAAoC2E,CAApC,GAAwC,CAD3C,CAFF,CADF,EAMe,GANf,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BjD,IAAI,CAAC/B,MAAnC,CADF,CADF,CADF,CARF,eAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B+B,IAAI,CAAC9B,IAAhC,CADF,CAfF,eAkBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B8B,IAAI,CAAC7B,KAAhC,CADF,CAlBF,eAqBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B6B,IAAI,CAAC5B,UAAhC,CADF,CArBF,eAwBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B4B,IAAI,CAAC3B,KAAhC,CADF,CAxBF,eA2BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA3BF,eA8BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,kBAAW,MAHb;AAIE,IAAA,OAAO,EAAE,MAAMyG,aAAa,CAAC9E,IAAD,CAJ9B,CAIsC;AAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,SAApB;AAA8B,mBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eASE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,kBAAW,QAHb;AAIE,IAAA,OAAO,EAAE,MAAM+E,eAAe,CAAC/E,IAAD,CAJhC,CAIwC;AAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,SAArB;AAA+B,mBAAY,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CATF,CADF,CA9BF,CADD,CADH,CAbF,CAjCF,eAsGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEzB,YADhB;AAEE,IAAA,cAAc,EAAED,cAFlB;AAGE,IAAA,QAAQ,EAAEgC,kBAHZ;AAIE,IAAA,KAAK,EAAC,kBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtGF,CAHF,eAkHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlHF,eAmHE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEjD,eAAf;AAAgC,IAAA,OAAO,EAAEqH,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGjH,aAAa,iBACZ,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,aAAa,CAACQ,MAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,aAAa,CAACS,IAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,aAAa,CAACU,KAAlB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,aAAa,CAACW,UAAlB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,aAAa,CAACY,KAAlB,CALF,eAME,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,KAAK,EAAEV,UAAU,CAACO,IAAX,IAAmB,EAJ5B;AAKE,IAAA,QAAQ,EAAE+F,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,eAgBE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,qBAHd;AAIE,IAAA,KAAK,EAAEtG,UAAU,CAACQ,KAAX,IAAoB,EAJ7B;AAKE,IAAA,QAAQ,EAAE8F,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,eA0BE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,WAAW,EAAC,KAHd;AAIE,IAAA,KAAK,EAAEtG,UAAU,CAACS,UAAX,IAAyB,EAJlC;AAKE,IAAA,QAAQ,EAAE6F,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA1BF,CAHJ,CAFF,eA8CE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAES,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,eASE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,OAAO,EAAEK,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,eAmBE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,OAAO,EAAEL,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CA9CF,CAnHF,eA2LE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE9G,iBAAf;AAAkC,IAAA,OAAO,EAAEsH,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,eASE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,OAAO,EAAEC,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,eAmBE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,OAAO,EAAED,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CAHF,CA3LF,eAwNE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE/G,qBAAf;AAAsC,IAAA,OAAO,EAAEgB,wBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,KAAK,EAAEd,QAAQ,CAACE,MAJlB;AAKE,IAAA,QAAQ,EAAEkG,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,KAAK,EAAEpG,QAAQ,CAACG,IAJlB;AAKE,IAAA,QAAQ,EAAEiG,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,KAAK,EAAEpG,QAAQ,CAACI,KAJlB;AAKE,IAAA,QAAQ,EAAEgG,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,eA+BE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,KAHd;AAIE,IAAA,KAAK,EAAEpG,QAAQ,CAACK,UAJlB;AAKE,IAAA,QAAQ,EAAE+F,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA/BF,eAyCE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,WAAW,EAAC,MAHd;AAIE,IAAA,KAAK,EAAEpG,QAAQ,CAACM,KAJlB;AAKE,IAAA,QAAQ,EAAE8F,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzCF,EAkDW,GAlDX,CADF,CAFF,eAwDE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEtF,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CANF,eASE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,OAAO,EAAE4F,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,eAmBE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,OAAO,EAAEL,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CAxDF,CAxNF,CADF;AA6SD;;AAED,eAAevH,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Badge,\r\n  Button,\r\n  Pagination,\r\n  Input,\r\n} from \"@windmill/react-ui\";\r\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { EditIcon, TrashIcon } from \"../icons\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nfunction Tables() {\r\n  const [dataTable2, setDataTable2] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [rowDataToEdit, setRowDataToEdit] = useState(null); // State to store data of the row being edited\r\n  const [editedData, setEditedData] = useState({}); // State\r\n  const [isAddStudentModalOpen, setAddStudentModalOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    rollno: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    department: \"\",\r\n    batch: \"\",\r\n  });\r\n\r\n  const resultsPerPage = 8;\r\n  const totalResults = dataTable2.length;\r\n\r\n  const [pageTable2, setPageTable2] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchOverallStudentData();\r\n  }, []);\r\n  function addStudentModalOpen() {\r\n    setAddStudentModalOpen(true);\r\n  }\r\n  function closeaddStudentModalOpen() {\r\n    setAddStudentModalOpen(false);\r\n  }\r\n  \r\n  const handleformsubmit = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5555/adduser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (response.ok) {\r\n        console.log(\"Form Data sent successfully\");\r\n        closeaddStudentModalOpen();\r\n      } else {\r\n        console.error(\"Failed to send form data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending form data:\", error);\r\n    }\r\n  };\r\n\r\n  async function fetchOverallStudentData() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5555/getdata\");\r\n      const data = await response.json();\r\n      const mappedData = data.map((student) => ({\r\n        rollno: student.rollno,\r\n        name: student.name,\r\n        email: student.email,\r\n        department: student.department,\r\n        batch: student.batch,\r\n      }));\r\n      setDataTable2(mappedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      dataTable2.filter(\r\n        (user) =>\r\n          (user.rollno &&\r\n            user.rollno.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.name &&\r\n            user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.email &&\r\n            user.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.department &&\r\n            user.department.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n          (user.batch &&\r\n            user.batch.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchTerm, dataTable2]);\r\n\r\n  useEffect(() => {\r\n    const startIndex = (pageTable2 - 1) * resultsPerPage;\r\n    const endIndex = startIndex + resultsPerPage;\r\n    setFilteredData(dataTable2.slice(startIndex, endIndex));\r\n  }, [pageTable2, dataTable2]);\r\n\r\n  function onPageChangeTable2(p) {\r\n    setPageTable2(p);\r\n  }\r\n\r\n  function handleSearchTermChange(event) {\r\n    setSearchTerm(event.target.value);\r\n  }\r\n\r\n  const fileInputRef = useRef(null); // Ref for file input element\r\n\r\n  function handleImportButtonClick() {\r\n    fileInputRef.current.click(); // Simulate click on file input\r\n  }\r\n\r\n  function handleImportFile(event) {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileName = file.name;\r\n      const fileExtension = fileName.split(\".\").pop().toLowerCase();\r\n      if (fileExtension === \"xlsx\" || fileExtension === \"xls\") {\r\n        try {\r\n          const importedData = parseExcelData(event.target.result);\r\n          console.log(\"Imported Excel data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing Excel data:\", error);\r\n        }\r\n      } else if (fileExtension === \"csv\") {\r\n        try {\r\n          const importedData = parseCSVData(event.target.result);\r\n          console.log(\"Imported CSV data:\", importedData);\r\n          setDataTable2(importedData);\r\n        } catch (error) {\r\n          console.error(\"Error parsing CSV data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Unsupported file format\");\r\n      }\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  function parseExcelData(excelData) {\r\n    const workbook = XLSX.read(excelData, { type: \"binary\" });\r\n    const sheetName = workbook.SheetNames[0]; // Assuming there's only one sheet\r\n    const sheet = workbook.Sheets[sheetName];\r\n    // Convert the sheet data into an array of objects\r\n    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n    // Assuming the first row contains headers\r\n    const headers = data[0];\r\n    // Start from the second row to parse data\r\n    const parsedData = data.slice(1).map((row) => {\r\n      const rowData = {};\r\n      row.forEach((value, index) => {\r\n        rowData[headers[index]] = value;\r\n      });\r\n      return rowData;\r\n    });\r\n    console.log(parsedData);\r\n    return parsedData;\r\n  }\r\n\r\n  function parseCSVData(csvData) {\r\n    const rows = csvData.split(\"\\n\"); // Split CSV data by newline to get rows\r\n    const headers = rows[0].split(\",\"); // Assuming the first row contains headers\r\n    const parsedData = [];\r\n    // Start from the second row to parse data\r\n    for (let i = 1; i < rows.length; i++) {\r\n      const rowData = {};\r\n      const values = rows[i].split(\",\");\r\n      // Assign each value to its corresponding header\r\n      headers.forEach((header, index) => {\r\n        rowData[header] = values[index];\r\n      });\r\n      parsedData.push(rowData);\r\n    }\r\n    return parsedData;\r\n  }\r\n\r\n  function handleExportData() {\r\n    let csvContent = \"Roll no,Name,Email,Department,Batch\\n\";\r\n    dataTable2.forEach((user) => {\r\n      if (\r\n        user.rollno &&\r\n        user.name &&\r\n        user.email &&\r\n        user.department &&\r\n        user.batch\r\n      ) {\r\n        csvContent += `${user.rollno},${user.name},${user.email},${user.department},${user.batch}\\n`;\r\n      }\r\n    });\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"student_details.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n  function handleInputAddChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleUpdate() {\r\n    // Find the index of the row to be updated\r\n    const rowIndex = dataTable2.findIndex(\r\n      (row) => row.rollno === rowDataToEdit.rollno\r\n    );\r\n    if (rowIndex !== -1) {\r\n      // Update the row data with edited values\r\n      const updatedRowData = { ...dataTable2[rowIndex], ...editedData };\r\n      const updatedDataTable = [...dataTable2];\r\n      updatedDataTable[rowIndex] = updatedRowData;\r\n      setDataTable2(updatedDataTable);\r\n      // Close the modal after updating\r\n      closeEditModal();\r\n      // Send the updated data to the backend\r\n      updateDataInBackend(updatedRowData);\r\n    }\r\n  }\r\n\r\n  async function updateDataInBackend(updatedRowData) {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5555/userupdate/${updatedRowData.rollno}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(updatedRowData),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        console.log(\"Data updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to update data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDelete() {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5555/deleteuser/${rowDataToEdit.rollno}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        console.log(\"Data deleted successfully\");\r\n        const updatedDataTable = dataTable2.filter(\r\n          (row) => row.rollno !== rowDataToEdit.rollno\r\n        );\r\n        setDataTable2(updatedDataTable);\r\n        closeDeleteModal(); // Close the modal after deletion\r\n      } else {\r\n        console.error(\"Failed to delete data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  }\r\n\r\n  function openEditModal(rowData) {\r\n    setRowDataToEdit(rowData); // Set the data of the row being edited\r\n    setIsEditModalOpen(true);\r\n  }\r\n\r\n  function closeEditModal() {\r\n    setIsEditModalOpen(false);\r\n  }\r\n\r\n  function openDeleteModal(user) {\r\n    setRowDataToEdit(user); // Set the data of the row being deleted\r\n    setIsDeleteModalOpen(true);\r\n  }\r\n\r\n  function closeDeleteModal() {\r\n    setIsDeleteModalOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Course Master</PageTitle>\r\n\r\n      <TableContainer className=\"mb-8\">\r\n        <div className=\"m-4 flex justify-between items-center\">\r\n          <div className=\"flex justify-start items-center\">\r\n            <Input\r\n              placeholder=\"Search...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchTermChange}\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end items-center\">\r\n            <Button onClick={handleImportButtonClick}>Import</Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx, .xls, .csv\"\r\n              onChange={handleImportFile}\r\n              id=\"import-file\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef} // Associate ref with file input\r\n            />\r\n\r\n            {/* Add a gap between import and download button */}\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={handleExportData}>\r\n              <FaDownload className=\"w-5 h-5\" />\r\n            </Button>\r\n            <div style={{ width: \"15px\" }}></div>\r\n            <Button onClick={addStudentModalOpen}>\r\n              <IoIosAddCircleOutline className=\"w-5 h-5\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <hr className=\"border-t-1 w-full\" />\r\n\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>S no</TableCell>\r\n              <TableCell>Course ID</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Department</TableCell>\r\n              <TableCell>Batch</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredData.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <span className=\"text-sm\">\r\n                    {(pageTable2 - 1) * resultsPerPage + i + 1}\r\n                  </span>\r\n                </TableCell>{\" \"}\r\n                {/* Calculate S.no */}\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.rollno}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.name}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.email}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.department}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{user.batch}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type=\"success\">Active</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Edit\"\r\n                      onClick={() => openEditModal(user)} // Pass the row data to the edit modal\r\n                    >\r\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                    <Button\r\n                      layout=\"link\"\r\n                      size=\"icon\"\r\n                      aria-label=\"Delete\"\r\n                      onClick={() => openDeleteModal(user)} // Pass the row data to the delete modal\r\n                    >\r\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable2}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n      <div></div>\r\n      <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n        <ModalHeader>Student Details</ModalHeader>\r\n        <ModalBody>\r\n          {/* Display the row data in the modal */}\r\n          {rowDataToEdit && (\r\n            <>\r\n              <p>{rowDataToEdit.rollno}</p>\r\n              <p>{rowDataToEdit.name}</p>\r\n              <p>{rowDataToEdit.email}</p>\r\n              <p>{rowDataToEdit.department}</p>\r\n              <p>{rowDataToEdit.batch}</p>\r\n              <Label className=\"mt-4\">\r\n                <span>Name</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"name\"\r\n                  placeholder=\"Poovarasan\"\r\n                  value={editedData.name || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Email</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"email\"\r\n                  placeholder=\"poovarasan@bitsathy\"\r\n                  value={editedData.email || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n              <Label className=\"mt-4\">\r\n                <span>Department</span>\r\n                <Input\r\n                  className=\"mt-1\"\r\n                  name=\"department\"\r\n                  placeholder=\"CSE\"\r\n                  value={editedData.department || \"\"}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Label>\r\n\r\n              {/* Add input fields for editing */}\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeEditModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleUpdate}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal isOpen={isDeleteModalOpen} onClose={closeDeleteModal}>\r\n        <ModalHeader>Student Deletion</ModalHeader>\r\n        <ModalBody>Your Deleting student Data</ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeDeleteModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleDelete}>Delete</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeDeleteModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal isOpen={isAddStudentModalOpen} onClose={closeaddStudentModalOpen}>\r\n        <ModalHeader>Add Student Details</ModalHeader>\r\n        <ModalBody>\r\n          <>\r\n            <Label className=\"mt-4\">\r\n              <span>Roll No</span>\r\n              <Input\r\n                name=\"rollno\"\r\n                className=\"mt-1\"\r\n                placeholder=\"7376211CS239\"\r\n                value={formData.rollno}\r\n                onChange={handleInputAddChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Name</span>\r\n              <Input\r\n                name=\"name\"\r\n                className=\"mt-1\"\r\n                placeholder=\"Poovarasan\"\r\n                value={formData.name}\r\n                onChange={handleInputAddChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Email</span>\r\n              <Input\r\n                name=\"email\"\r\n                className=\"mt-1\"\r\n                placeholder=\"abc@bitsathy.ac.in\"\r\n                value={formData.email}\r\n                onChange={handleInputAddChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Department</span>\r\n              <Input\r\n                name=\"department\"\r\n                className=\"mt-1\"\r\n                placeholder=\"CSE\"\r\n                value={formData.department}\r\n                onChange={handleInputAddChange}\r\n              />\r\n            </Label>\r\n            <Label className=\"mt-4\">\r\n              <span>Batch</span>\r\n              <Input\r\n                name=\"batch\"\r\n                className=\"mt-1\"\r\n                placeholder=\"2025\"\r\n                value={formData.batch}\r\n                onChange={handleInputAddChange}\r\n              />\r\n            </Label>{\" \"}\r\n          </>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeaddStudentModalOpen}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleformsubmit}>Add Student</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={closeEditModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" onClick={handleUpdate}>\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}